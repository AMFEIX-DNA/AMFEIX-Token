{
  "contractName": "AMF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenPool_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "btcPool_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "customer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "btcTxId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sentToken",
          "type": "uint256"
        }
      ],
      "name": "AmfPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "newAddress",
          "type": "string"
        }
      ],
      "name": "BtcPoolAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "customer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "userBtcAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sentToken",
          "type": "uint256"
        }
      ],
      "name": "BtcToBePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMinimum",
          "type": "uint256"
        }
      ],
      "name": "MinimumWithdrawalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newRatio",
          "type": "uint256"
        }
      ],
      "name": "RatioChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "TokenPoolAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumWithdrawalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinimum",
          "type": "uint256"
        }
      ],
      "name": "setMinimumWithdrawalAmount",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRatio",
          "type": "uint256"
        }
      ],
      "name": "setSwapRatio",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setTokenPoolAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBtcPoolAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newAddress",
          "type": "string"
        }
      ],
      "name": "setBtcPoolAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userBtcAddress",
          "type": "string"
        }
      ],
      "name": "claimBTC",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "btcTxId",
          "type": "string"
        }
      ],
      "name": "payAMF",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "setForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenPool_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"btcPool_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"btcTxId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentToken\",\"type\":\"uint256\"}],\"name\":\"AmfPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newAddress\",\"type\":\"string\"}],\"name\":\"BtcPoolAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"userBtcAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentToken\",\"type\":\"uint256\"}],\"name\":\"BtcToBePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMinimum\",\"type\":\"uint256\"}],\"name\":\"MinimumWithdrawalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newRatio\",\"type\":\"uint256\"}],\"name\":\"RatioChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TokenPoolAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userBtcAddress\",\"type\":\"string\"}],\"name\":\"claimBTC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBtcPoolAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWithdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"btcTxId\",\"type\":\"string\"}],\"name\":\"payAMF\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newAddress\",\"type\":\"string\"}],\"name\":\"setBtcPoolAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimum\",\"type\":\"uint256\"}],\"name\":\"setMinimumWithdrawalAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRatio\",\"type\":\"uint256\"}],\"name\":\"setSwapRatio\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setTokenPoolAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract based on ERC20 standard with \\\"swap\\\" features between BTC and AMF\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Allows anyone to destroy its tokens.\",\"params\":{\"amount\":\"The number of tokens that sender is willing to burn from its account\"}},\"claimBTC(uint256,string)\":{\"details\":\"Allow any customer who hold tokens to claim BTC \",\"params\":{\"tokenAmount\":\"Amount of tokens to be exchanged (needs to be multiplied by 10^18)\",\"userBtcAddress\":\"BTC address on which users willing to receive payment /!\\\\ gas cost for calling this method : 37kgas /!\\\\\"}},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getBtcPoolAddress()\":{\"details\":\"Returns the current BTC pool address held by AMFEIX.\"},\"getMinimumWithdrawalAmount()\":{\"details\":\"Returns the current AMF minimum withdrawal amount.  We need this value to prevent users from claiming BTC if the AMF amount is too small. Main reason is the BTC mining fees AMFEIX is going to pay for this transaction\"},\"getSwapRatio()\":{\"details\":\"Returns the current swap ratio (how much AMF tokens corresponds to 1 BTC)       Initial ratio  100000 AMF : 1 BTC  (1 AMF : 1000 sat) We need this value to compute the amount of AMF to send to users when they deposited BTC at AMFEIX and to compute the amount of BTC to send to users when they claim back their BTC.\"},\"getTokenPoolAddress()\":{\"details\":\"Returns the current AMF token pool address held by AMFEIX.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Allows contract owner to create new tokens. \",\"params\":{\"amount\":\"The number of tokens the recipient will receive\",\"newHolder\":\"Ethereum address of the recipient \"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"payAMF(uint256,address,string)\":{\"details\":\"Allow AMFEIX to transfer AMF to claiming users \",\"params\":{\"btcTxId\":\"ID of the AMF buying transaction on Bitcoin network\",\"tokenAmount\":\"Amount of tokens to be sent\",\"userAddress\":\"BTC address on which users willing to receive payment\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBtcPoolAddress(string)\":{\"details\":\"Allows contract owner to update its current BTC pool address. \",\"params\":{\"newAddress\":\"The updated address of the BTC pool\"}},\"setMinimumWithdrawalAmount(uint256)\":{\"details\":\"Allows contract owner to update the current AMF minimum withdrawal amount. \",\"params\":{\"newMinimum\":\"The updated minimum amount of AMF allowed for BTC withdrawal\"}},\"setSwapRatio(uint256)\":{\"details\":\"Allows contract owner to update the current swap ratio (AMF/BTC). \",\"params\":{\"newRatio\":\"The updated amount of AMF tokens corresponding to 1 BTC (~10^5)\"}},\"setTokenPoolAddress(address)\":{\"details\":\"Allows contract owner to update its current AMF token pool address. \",\"params\":{\"newAddress\":\"The updated address of the token pool\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AMFEIX ERC20 swap smart contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kaio/AMFEIX-Token/contracts/AMF.sol\":\"AMF\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kaio/AMFEIX-Token/contracts/AMF.sol\":{\"keccak256\":\"0xa04c3e841557a0e3d7224be931cd5063664963be9db009bd193b2c14d97670c6\",\"urls\":[\"bzz-raw://18f3ed4922134f8a45a190af44f22165514a33dcba01c5af97bcb142e7804e87\",\"dweb:/ipfs/QmYZU6q7k1hP7Y8GxCfhKVXS6ViWWyGuw9F9vsvPUDxQi5\"]},\"/home/kaio/AMFEIX-Token/node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol\":{\"keccak256\":\"0xa994b1bd59233901e49c7ad31c64f7fb29a8c30f44ada12d4839128d443fe4ec\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://11eed87cd15d0813b1b3abedb5d0c03c2f284f7f2374bb4a99bc71a21b659591\",\"dweb:/ipfs/QmXZyUfzMfLxgRc1rGzePVJoHXU9ouU5HWcJUyEtkPx5Kj\"]},\"/home/kaio/AMFEIX-Token/node_modules/@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://928801ac8ceac377f326cd48de8e0056db9a7f8767b60efee5dfca035f326702\",\"dweb:/ipfs/QmYFkKXZcSVmmLNpDF1hvsLwAnhjmVSZuvEueaJgp1aVSg\"]},\"/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x49bb39c5e945727f7d263cf1c5d8fcebbee3f4ca16f33ec61b1f2db20ffa22bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f6d1af35d9b34140ad4e3bb8c62af4ae57196fe284901b232a09f3a22c51c04\",\"dweb:/ipfs/QmekwWtJ1ZXJw8L7Z1a8iP2nP7BLGhSGk2qnfL4dzsFknv\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600581526020017f322e322e30000000000000000000000000000000000000000000000000000000815250600c908051906020019062000051929190620002a1565b503480156200005f57600080fd5b5060405162003355380380620033558339818101604052810190620000859190620003da565b838381600390805190602001906200009f929190620002a1565b508060049080519060200190620000b8929190620002a1565b5050506000620000cd620001e360201b60201c565b905080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620186a060088190555081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a9080519060200190620001cf929190620002a1565b506103e8600b819055505050505062000610565b6000620001fa620001ff60201b620016ef1760201c565b905090565b6000601460003690501015801562000224575062000223336200024760201b60201c565b5b156200023a57601436033560601c905062000243565b33905062000244565b5b90565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b828054620002af9062000562565b90600052602060002090601f016020900481019282620002d357600085556200031f565b82601f10620002ee57805160ff19168380011785556200031f565b828001600101855582156200031f579182015b828111156200031e57825182559160200191906001019062000301565b5b5090506200032e919062000332565b5090565b5b808211156200034d57600081600090555060010162000333565b5090565b6000620003686200036284620004c5565b62000491565b9050828152602081018484840111156200038157600080fd5b6200038e8482856200052c565b509392505050565b600081519050620003a781620005f6565b92915050565b600082601f830112620003bf57600080fd5b8151620003d184826020860162000351565b91505092915050565b60008060008060808587031215620003f157600080fd5b600085015167ffffffffffffffff8111156200040c57600080fd5b6200041a87828801620003ad565b945050602085015167ffffffffffffffff8111156200043857600080fd5b6200044687828801620003ad565b9350506040620004598782880162000396565b925050606085015167ffffffffffffffff8111156200047757600080fd5b6200048587828801620003ad565b91505092959194509250565b6000604051905081810181811067ffffffffffffffff82111715620004bb57620004ba620005c7565b5b8060405250919050565b600067ffffffffffffffff821115620004e357620004e2620005c7565b5b601f19601f8301169050602081019050919050565b600062000505826200050c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200054c5780820151818401526020810190506200052f565b838111156200055c576000848401525b50505050565b600060028204905060018216806200057b57607f821691505b6020821081141562000592576200059162000598565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200060181620004f8565b81146200060d57600080fd5b50565b612d3580620006206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637da0a87711610104578063aa784366116100a2578063dd62ed3e11610071578063dd62ed3e146105d1578063f03cb74b14610601578063f2fde38b14610631578063f529e5ca1461064d576101da565b8063aa78436614610537578063b9998a2414610567578063ba2129b114610583578063becb3451146105b3576101da565b80638da5cb5b116100de5780638da5cb5b1461049b57806395d89b41146104b9578063a457c2d7146104d7578063a9059cbb14610507576101da565b80637da0a8771461042f578063801166a11461044d57806388b6c5c21461047d576101da565b80633ad62bd71161017c578063572b6c051161014b578063572b6c05146103955780636e2662b8146103c557806370a08231146103f5578063715018a614610425576101da565b80633ad62bd7146102f957806340c10f191461031757806342966c6814610347578063486ff0cd14610377576101da565b806323b872dd116101b857806323b872dd1461024b578063313ce5671461027b5780633620d3731461029957806339509351146102c9576101da565b806306fdde03146101df578063095ea7b3146101fd57806318160ddd1461022d575b600080fd5b6101e761066b565b6040516101f49190612810565b60405180910390f35b6102176004803603810190610212919061209a565b6106fd565b60405161022491906127f5565b60405180910390f35b61023561071b565b6040516102429190612a22565b60405180910390f35b6102656004803603810190610260919061204b565b610725565b60405161027291906127f5565b60405180910390f35b610283610826565b6040516102909190612a3d565b60405180910390f35b6102b360048036038101906102ae9190612117565b61082f565b6040516102c091906127f5565b60405180910390f35b6102e360048036038101906102de919061209a565b6108ea565b6040516102f091906127f5565b60405180910390f35b610301610996565b60405161030e9190612810565b60405180910390f35b610331600480360381019061032c919061209a565b610a28565b60405161033e9190612a22565b60405180910390f35b610361600480360381019061035c9190612117565b610ab9565b60405161036e91906127f5565b60405180910390f35b61037f610ad5565b60405161038c9190612810565b60405180910390f35b6103af60048036038101906103aa9190611fe6565b610b63565b6040516103bc91906127f5565b60405180910390f35b6103df60048036038101906103da9190612140565b610bbd565b6040516103ec91906127f5565b60405180910390f35b61040f600480360381019061040a9190611fe6565b610cc3565b60405161041c9190612a22565b60405180910390f35b61042d610d0b565b005b610437610e48565b60405161044491906127da565b60405180910390f35b610467600480360381019061046291906120d6565b610e6e565b60405161047491906127f5565b60405180910390f35b610485610f4e565b60405161049291906127da565b60405180910390f35b6104a3610f78565b6040516104b091906127da565b60405180910390f35b6104c1610fa2565b6040516104ce9190612810565b60405180910390f35b6104f160048036038101906104ec919061209a565b611034565b6040516104fe91906127f5565b60405180910390f35b610521600480360381019061051c919061209a565b611128565b60405161052e91906127f5565b60405180910390f35b610551600480360381019061054c91906121a7565b611146565b60405161055e91906127f5565b60405180910390f35b610581600480360381019061057c9190611fe6565b611222565b005b61059d60048036038101906105989190612117565b6112e2565b6040516105aa91906127f5565b60405180910390f35b6105bb61139d565b6040516105c89190612a22565b60405180910390f35b6105eb60048036038101906105e6919061200f565b6113a7565b6040516105f89190612a22565b60405180910390f35b61061b60048036038101906106169190611fe6565b61142e565b60405161062891906127f5565b60405180910390f35b61064b60048036038101906106469190611fe6565b611539565b005b6106556116e5565b6040516106629190612a22565b60405180910390f35b60606003805461067a90612c01565b80601f01602080910402602001604051908101604052809291908181526020018280546106a690612c01565b80156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b5050505050905090565b600061071161070a61172b565b848461173a565b6001905092915050565b6000600254905090565b6000610732848484611905565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061077d61172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490612942565b60405180910390fd5b61081a8561080961172b565b85846108159190612b36565b61173a565b60019150509392505050565b60006012905090565b600061083961172b565b73ffffffffffffffffffffffffffffffffffffffff16610857610f78565b73ffffffffffffffffffffffffffffffffffffffff16146108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490612962565b60405180910390fd5b81600b81905550817f1c0b5d59cecc9b0f3621bb9becf0bc789b39a30cba53596aba207720f92a1caa60405160405180910390a260019050919050565b600061098c6108f761172b565b84846001600061090561172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109879190612ae0565b61173a565b6001905092915050565b6060600a80546109a590612c01565b80601f01602080910402602001604051908101604052809291908181526020018280546109d190612c01565b8015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b5050505050905090565b6000610a3261172b565b73ffffffffffffffffffffffffffffffffffffffff16610a50610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d90612962565b60405180910390fd5b610ab08383611b84565b81905092915050565b6000610acc610ac661172b565b83611cd8565b60019050919050565b600c8054610ae290612c01565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0e90612c01565b8015610b5b5780601f10610b3057610100808354040283529160200191610b5b565b820191906000526020600020905b815481529060010190602001808311610b3e57829003601f168201915b505050505081565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c0061172b565b73ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90612862565b60405180910390fd5b610c68610c6161172b565b8486611905565b8273ffffffffffffffffffffffffffffffffffffffff167f95763f56e04b8aa137bfb71e206bfba87dafe92d7eb96bbd3909c1fc21c41e088386604051610cb0929190612832565b60405180910390a2600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d1361172b565b73ffffffffffffffffffffffffffffffffffffffff16610d31610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7e90612962565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e7861172b565b73ffffffffffffffffffffffffffffffffffffffff16610e96610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390612962565b60405180910390fd5b81600a9080519060200190610f02929190611eb1565b5081604051610f1191906127c3565b60405180910390207fdbaa75eb327a06f927a3a51694b0af062122012490b7fec799e3d8ba8e2f561160405160405180910390a260019050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610fb190612c01565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdd90612c01565b801561102a5780601f10610fff5761010080835404028352916020019161102a565b820191906000526020600020905b81548152906001019060200180831161100d57829003601f168201915b5050505050905090565b6000806001600061104361172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f7906129e2565b60405180910390fd5b61111d61110b61172b565b8585846111189190612b36565b61173a565b600191505092915050565b600061113c61113561172b565b8484611905565b6001905092915050565b6000600b5483101561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118490612922565b60405180910390fd5b6111c161119861172b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611905565b6111c961172b565b73ffffffffffffffffffffffffffffffffffffffff167f57a2da10e578fdce2482690a77eb65471abdc36ee3abdea43b2cb43b0d7486bd8385604051611210929190612832565b60405180910390a26001905092915050565b61122a61172b565b73ffffffffffffffffffffffffffffffffffffffff16611248610f78565b73ffffffffffffffffffffffffffffffffffffffff161461129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129590612962565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006112ec61172b565b73ffffffffffffffffffffffffffffffffffffffff1661130a610f78565b73ffffffffffffffffffffffffffffffffffffffff1614611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135790612962565b60405180910390fd5b81600881905550817fe200219383a2dbe79fad4e1549a81b6057429299f33583641c5fdddcdc0b379760405160405180910390a260019050919050565b6000600854905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061143861172b565b73ffffffffffffffffffffffffffffffffffffffff16611456610f78565b73ffffffffffffffffffffffffffffffffffffffff16146114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390612962565b60405180910390fd5b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f621a90dc5a329844ef964be25bebe48e4c53aeccd5103828f62d85513330b2f360405160405180910390a260019050919050565b61154161172b565b73ffffffffffffffffffffffffffffffffffffffff1661155f610f78565b73ffffffffffffffffffffffffffffffffffffffff16146115b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ac90612962565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c906128c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b54905090565b6000601460003690501015801561170b575061170a33610b63565b5b1561171f57601436033560601c9050611727565b339050611728565b5b90565b60006117356116ef565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a1906129c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611811906128e2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516118f89190612a22565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196c906129a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dc90612882565b60405180910390fd5b6119f0838383611eac565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6d90612902565b60405180910390fd5b8181611a829190612b36565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b129190612ae0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b769190612a22565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb90612a02565b60405180910390fd5b611c0060008383611eac565b8060026000828254611c129190612ae0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c679190612ae0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ccc9190612a22565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3f90612982565b60405180910390fd5b611d5482600083611eac565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd1906128a2565b60405180910390fd5b8181611de69190612b36565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611e3a9190612b36565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e9f9190612a22565b60405180910390a3505050565b505050565b828054611ebd90612c01565b90600052602060002090601f016020900481019282611edf5760008555611f26565b82601f10611ef857805160ff1916838001178555611f26565b82800160010185558215611f26579182015b82811115611f25578251825591602001919060010190611f0a565b5b509050611f339190611f37565b5090565b5b80821115611f50576000816000905550600101611f38565b5090565b6000611f67611f6284612a89565b612a58565b905082815260208101848484011115611f7f57600080fd5b611f8a848285612bbf565b509392505050565b600081359050611fa181612cd1565b92915050565b600082601f830112611fb857600080fd5b8135611fc8848260208601611f54565b91505092915050565b600081359050611fe081612ce8565b92915050565b600060208284031215611ff857600080fd5b600061200684828501611f92565b91505092915050565b6000806040838503121561202257600080fd5b600061203085828601611f92565b925050602061204185828601611f92565b9150509250929050565b60008060006060848603121561206057600080fd5b600061206e86828701611f92565b935050602061207f86828701611f92565b925050604061209086828701611fd1565b9150509250925092565b600080604083850312156120ad57600080fd5b60006120bb85828601611f92565b92505060206120cc85828601611fd1565b9150509250929050565b6000602082840312156120e857600080fd5b600082013567ffffffffffffffff81111561210257600080fd5b61210e84828501611fa7565b91505092915050565b60006020828403121561212957600080fd5b600061213784828501611fd1565b91505092915050565b60008060006060848603121561215557600080fd5b600061216386828701611fd1565b935050602061217486828701611f92565b925050604084013567ffffffffffffffff81111561219157600080fd5b61219d86828701611fa7565b9150509250925092565b600080604083850312156121ba57600080fd5b60006121c885828601611fd1565b925050602083013567ffffffffffffffff8111156121e557600080fd5b6121f185828601611fa7565b9150509250929050565b61220481612b6a565b82525050565b61221381612b7c565b82525050565b600061222482612ab9565b61222e8185612ac4565b935061223e818560208601612bce565b61224781612cc0565b840191505092915050565b600061225d82612ab9565b6122678185612ad5565b9350612277818560208601612bce565b80840191505092915050565b6000612290601f83612ac4565b91507f4f6e6c7920414d464549582063616e207573652074686973206d6574686f64006000830152602082019050919050565b60006122d0602383612ac4565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612336602283612ac4565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061239c602683612ac4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612402602283612ac4565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612468602683612ac4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124ce603283612ac4565b91507f63757272656e74206d696e696d756d2077697468726177616c20697320247b5f60008301527f6d696e696d756d5769746864726177616c7d00000000000000000000000000006020830152604082019050919050565b6000612534602883612ac4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061259a602083612ac4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006125da602183612ac4565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612640602583612ac4565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126a6602483612ac4565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061270c602583612ac4565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612772601f83612ac4565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6127ae81612ba8565b82525050565b6127bd81612bb2565b82525050565b60006127cf8284612252565b915081905092915050565b60006020820190506127ef60008301846121fb565b92915050565b600060208201905061280a600083018461220a565b92915050565b6000602082019050818103600083015261282a8184612219565b905092915050565b6000604082019050818103600083015261284c8185612219565b905061285b60208301846127a5565b9392505050565b6000602082019050818103600083015261287b81612283565b9050919050565b6000602082019050818103600083015261289b816122c3565b9050919050565b600060208201905081810360008301526128bb81612329565b9050919050565b600060208201905081810360008301526128db8161238f565b9050919050565b600060208201905081810360008301526128fb816123f5565b9050919050565b6000602082019050818103600083015261291b8161245b565b9050919050565b6000602082019050818103600083015261293b816124c1565b9050919050565b6000602082019050818103600083015261295b81612527565b9050919050565b6000602082019050818103600083015261297b8161258d565b9050919050565b6000602082019050818103600083015261299b816125cd565b9050919050565b600060208201905081810360008301526129bb81612633565b9050919050565b600060208201905081810360008301526129db81612699565b9050919050565b600060208201905081810360008301526129fb816126ff565b9050919050565b60006020820190508181036000830152612a1b81612765565b9050919050565b6000602082019050612a3760008301846127a5565b92915050565b6000602082019050612a5260008301846127b4565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612a7f57612a7e612c91565b5b8060405250919050565b600067ffffffffffffffff821115612aa457612aa3612c91565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000612aeb82612ba8565b9150612af683612ba8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b2b57612b2a612c33565b5b828201905092915050565b6000612b4182612ba8565b9150612b4c83612ba8565b925082821015612b5f57612b5e612c33565b5b828203905092915050565b6000612b7582612b88565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015612bec578082015181840152602081019050612bd1565b83811115612bfb576000848401525b50505050565b60006002820490506001821680612c1957607f821691505b60208210811415612c2d57612c2c612c62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612cda81612b6a565b8114612ce557600080fd5b50565b612cf181612ba8565b8114612cfc57600080fd5b5056fea26469706673582212209593bf2f600ff6aed8cbd9bb33e6582a4967f74e6daae5adc19b610cb06e795164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80637da0a87711610104578063aa784366116100a2578063dd62ed3e11610071578063dd62ed3e146105d1578063f03cb74b14610601578063f2fde38b14610631578063f529e5ca1461064d576101da565b8063aa78436614610537578063b9998a2414610567578063ba2129b114610583578063becb3451146105b3576101da565b80638da5cb5b116100de5780638da5cb5b1461049b57806395d89b41146104b9578063a457c2d7146104d7578063a9059cbb14610507576101da565b80637da0a8771461042f578063801166a11461044d57806388b6c5c21461047d576101da565b80633ad62bd71161017c578063572b6c051161014b578063572b6c05146103955780636e2662b8146103c557806370a08231146103f5578063715018a614610425576101da565b80633ad62bd7146102f957806340c10f191461031757806342966c6814610347578063486ff0cd14610377576101da565b806323b872dd116101b857806323b872dd1461024b578063313ce5671461027b5780633620d3731461029957806339509351146102c9576101da565b806306fdde03146101df578063095ea7b3146101fd57806318160ddd1461022d575b600080fd5b6101e761066b565b6040516101f49190612810565b60405180910390f35b6102176004803603810190610212919061209a565b6106fd565b60405161022491906127f5565b60405180910390f35b61023561071b565b6040516102429190612a22565b60405180910390f35b6102656004803603810190610260919061204b565b610725565b60405161027291906127f5565b60405180910390f35b610283610826565b6040516102909190612a3d565b60405180910390f35b6102b360048036038101906102ae9190612117565b61082f565b6040516102c091906127f5565b60405180910390f35b6102e360048036038101906102de919061209a565b6108ea565b6040516102f091906127f5565b60405180910390f35b610301610996565b60405161030e9190612810565b60405180910390f35b610331600480360381019061032c919061209a565b610a28565b60405161033e9190612a22565b60405180910390f35b610361600480360381019061035c9190612117565b610ab9565b60405161036e91906127f5565b60405180910390f35b61037f610ad5565b60405161038c9190612810565b60405180910390f35b6103af60048036038101906103aa9190611fe6565b610b63565b6040516103bc91906127f5565b60405180910390f35b6103df60048036038101906103da9190612140565b610bbd565b6040516103ec91906127f5565b60405180910390f35b61040f600480360381019061040a9190611fe6565b610cc3565b60405161041c9190612a22565b60405180910390f35b61042d610d0b565b005b610437610e48565b60405161044491906127da565b60405180910390f35b610467600480360381019061046291906120d6565b610e6e565b60405161047491906127f5565b60405180910390f35b610485610f4e565b60405161049291906127da565b60405180910390f35b6104a3610f78565b6040516104b091906127da565b60405180910390f35b6104c1610fa2565b6040516104ce9190612810565b60405180910390f35b6104f160048036038101906104ec919061209a565b611034565b6040516104fe91906127f5565b60405180910390f35b610521600480360381019061051c919061209a565b611128565b60405161052e91906127f5565b60405180910390f35b610551600480360381019061054c91906121a7565b611146565b60405161055e91906127f5565b60405180910390f35b610581600480360381019061057c9190611fe6565b611222565b005b61059d60048036038101906105989190612117565b6112e2565b6040516105aa91906127f5565b60405180910390f35b6105bb61139d565b6040516105c89190612a22565b60405180910390f35b6105eb60048036038101906105e6919061200f565b6113a7565b6040516105f89190612a22565b60405180910390f35b61061b60048036038101906106169190611fe6565b61142e565b60405161062891906127f5565b60405180910390f35b61064b60048036038101906106469190611fe6565b611539565b005b6106556116e5565b6040516106629190612a22565b60405180910390f35b60606003805461067a90612c01565b80601f01602080910402602001604051908101604052809291908181526020018280546106a690612c01565b80156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b5050505050905090565b600061071161070a61172b565b848461173a565b6001905092915050565b6000600254905090565b6000610732848484611905565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061077d61172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490612942565b60405180910390fd5b61081a8561080961172b565b85846108159190612b36565b61173a565b60019150509392505050565b60006012905090565b600061083961172b565b73ffffffffffffffffffffffffffffffffffffffff16610857610f78565b73ffffffffffffffffffffffffffffffffffffffff16146108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490612962565b60405180910390fd5b81600b81905550817f1c0b5d59cecc9b0f3621bb9becf0bc789b39a30cba53596aba207720f92a1caa60405160405180910390a260019050919050565b600061098c6108f761172b565b84846001600061090561172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109879190612ae0565b61173a565b6001905092915050565b6060600a80546109a590612c01565b80601f01602080910402602001604051908101604052809291908181526020018280546109d190612c01565b8015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b5050505050905090565b6000610a3261172b565b73ffffffffffffffffffffffffffffffffffffffff16610a50610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d90612962565b60405180910390fd5b610ab08383611b84565b81905092915050565b6000610acc610ac661172b565b83611cd8565b60019050919050565b600c8054610ae290612c01565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0e90612c01565b8015610b5b5780601f10610b3057610100808354040283529160200191610b5b565b820191906000526020600020905b815481529060010190602001808311610b3e57829003601f168201915b505050505081565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c0061172b565b73ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90612862565b60405180910390fd5b610c68610c6161172b565b8486611905565b8273ffffffffffffffffffffffffffffffffffffffff167f95763f56e04b8aa137bfb71e206bfba87dafe92d7eb96bbd3909c1fc21c41e088386604051610cb0929190612832565b60405180910390a2600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d1361172b565b73ffffffffffffffffffffffffffffffffffffffff16610d31610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7e90612962565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e7861172b565b73ffffffffffffffffffffffffffffffffffffffff16610e96610f78565b73ffffffffffffffffffffffffffffffffffffffff1614610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390612962565b60405180910390fd5b81600a9080519060200190610f02929190611eb1565b5081604051610f1191906127c3565b60405180910390207fdbaa75eb327a06f927a3a51694b0af062122012490b7fec799e3d8ba8e2f561160405160405180910390a260019050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610fb190612c01565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdd90612c01565b801561102a5780601f10610fff5761010080835404028352916020019161102a565b820191906000526020600020905b81548152906001019060200180831161100d57829003601f168201915b5050505050905090565b6000806001600061104361172b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f7906129e2565b60405180910390fd5b61111d61110b61172b565b8585846111189190612b36565b61173a565b600191505092915050565b600061113c61113561172b565b8484611905565b6001905092915050565b6000600b5483101561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118490612922565b60405180910390fd5b6111c161119861172b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611905565b6111c961172b565b73ffffffffffffffffffffffffffffffffffffffff167f57a2da10e578fdce2482690a77eb65471abdc36ee3abdea43b2cb43b0d7486bd8385604051611210929190612832565b60405180910390a26001905092915050565b61122a61172b565b73ffffffffffffffffffffffffffffffffffffffff16611248610f78565b73ffffffffffffffffffffffffffffffffffffffff161461129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129590612962565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006112ec61172b565b73ffffffffffffffffffffffffffffffffffffffff1661130a610f78565b73ffffffffffffffffffffffffffffffffffffffff1614611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135790612962565b60405180910390fd5b81600881905550817fe200219383a2dbe79fad4e1549a81b6057429299f33583641c5fdddcdc0b379760405160405180910390a260019050919050565b6000600854905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061143861172b565b73ffffffffffffffffffffffffffffffffffffffff16611456610f78565b73ffffffffffffffffffffffffffffffffffffffff16146114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390612962565b60405180910390fd5b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f621a90dc5a329844ef964be25bebe48e4c53aeccd5103828f62d85513330b2f360405160405180910390a260019050919050565b61154161172b565b73ffffffffffffffffffffffffffffffffffffffff1661155f610f78565b73ffffffffffffffffffffffffffffffffffffffff16146115b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ac90612962565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c906128c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b54905090565b6000601460003690501015801561170b575061170a33610b63565b5b1561171f57601436033560601c9050611727565b339050611728565b5b90565b60006117356116ef565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a1906129c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611811906128e2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516118f89190612a22565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196c906129a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dc90612882565b60405180910390fd5b6119f0838383611eac565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6d90612902565b60405180910390fd5b8181611a829190612b36565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b129190612ae0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b769190612a22565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb90612a02565b60405180910390fd5b611c0060008383611eac565b8060026000828254611c129190612ae0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c679190612ae0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ccc9190612a22565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3f90612982565b60405180910390fd5b611d5482600083611eac565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd1906128a2565b60405180910390fd5b8181611de69190612b36565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611e3a9190612b36565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e9f9190612a22565b60405180910390a3505050565b505050565b828054611ebd90612c01565b90600052602060002090601f016020900481019282611edf5760008555611f26565b82601f10611ef857805160ff1916838001178555611f26565b82800160010185558215611f26579182015b82811115611f25578251825591602001919060010190611f0a565b5b509050611f339190611f37565b5090565b5b80821115611f50576000816000905550600101611f38565b5090565b6000611f67611f6284612a89565b612a58565b905082815260208101848484011115611f7f57600080fd5b611f8a848285612bbf565b509392505050565b600081359050611fa181612cd1565b92915050565b600082601f830112611fb857600080fd5b8135611fc8848260208601611f54565b91505092915050565b600081359050611fe081612ce8565b92915050565b600060208284031215611ff857600080fd5b600061200684828501611f92565b91505092915050565b6000806040838503121561202257600080fd5b600061203085828601611f92565b925050602061204185828601611f92565b9150509250929050565b60008060006060848603121561206057600080fd5b600061206e86828701611f92565b935050602061207f86828701611f92565b925050604061209086828701611fd1565b9150509250925092565b600080604083850312156120ad57600080fd5b60006120bb85828601611f92565b92505060206120cc85828601611fd1565b9150509250929050565b6000602082840312156120e857600080fd5b600082013567ffffffffffffffff81111561210257600080fd5b61210e84828501611fa7565b91505092915050565b60006020828403121561212957600080fd5b600061213784828501611fd1565b91505092915050565b60008060006060848603121561215557600080fd5b600061216386828701611fd1565b935050602061217486828701611f92565b925050604084013567ffffffffffffffff81111561219157600080fd5b61219d86828701611fa7565b9150509250925092565b600080604083850312156121ba57600080fd5b60006121c885828601611fd1565b925050602083013567ffffffffffffffff8111156121e557600080fd5b6121f185828601611fa7565b9150509250929050565b61220481612b6a565b82525050565b61221381612b7c565b82525050565b600061222482612ab9565b61222e8185612ac4565b935061223e818560208601612bce565b61224781612cc0565b840191505092915050565b600061225d82612ab9565b6122678185612ad5565b9350612277818560208601612bce565b80840191505092915050565b6000612290601f83612ac4565b91507f4f6e6c7920414d464549582063616e207573652074686973206d6574686f64006000830152602082019050919050565b60006122d0602383612ac4565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612336602283612ac4565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061239c602683612ac4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612402602283612ac4565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612468602683612ac4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124ce603283612ac4565b91507f63757272656e74206d696e696d756d2077697468726177616c20697320247b5f60008301527f6d696e696d756d5769746864726177616c7d00000000000000000000000000006020830152604082019050919050565b6000612534602883612ac4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061259a602083612ac4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006125da602183612ac4565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612640602583612ac4565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126a6602483612ac4565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061270c602583612ac4565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612772601f83612ac4565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6127ae81612ba8565b82525050565b6127bd81612bb2565b82525050565b60006127cf8284612252565b915081905092915050565b60006020820190506127ef60008301846121fb565b92915050565b600060208201905061280a600083018461220a565b92915050565b6000602082019050818103600083015261282a8184612219565b905092915050565b6000604082019050818103600083015261284c8185612219565b905061285b60208301846127a5565b9392505050565b6000602082019050818103600083015261287b81612283565b9050919050565b6000602082019050818103600083015261289b816122c3565b9050919050565b600060208201905081810360008301526128bb81612329565b9050919050565b600060208201905081810360008301526128db8161238f565b9050919050565b600060208201905081810360008301526128fb816123f5565b9050919050565b6000602082019050818103600083015261291b8161245b565b9050919050565b6000602082019050818103600083015261293b816124c1565b9050919050565b6000602082019050818103600083015261295b81612527565b9050919050565b6000602082019050818103600083015261297b8161258d565b9050919050565b6000602082019050818103600083015261299b816125cd565b9050919050565b600060208201905081810360008301526129bb81612633565b9050919050565b600060208201905081810360008301526129db81612699565b9050919050565b600060208201905081810360008301526129fb816126ff565b9050919050565b60006020820190508181036000830152612a1b81612765565b9050919050565b6000602082019050612a3760008301846127a5565b92915050565b6000602082019050612a5260008301846127b4565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612a7f57612a7e612c91565b5b8060405250919050565b600067ffffffffffffffff821115612aa457612aa3612c91565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000612aeb82612ba8565b9150612af683612ba8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b2b57612b2a612c33565b5b828201905092915050565b6000612b4182612ba8565b9150612b4c83612ba8565b925082821015612b5f57612b5e612c33565b5b828203905092915050565b6000612b7582612b88565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015612bec578082015181840152602081019050612bd1565b83811115612bfb576000848401525b50505050565b60006002820490506001821680612c1957607f821691505b60208210811415612c2d57612c2c612c62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612cda81612b6a565b8114612ce557600080fd5b50565b612cf181612ba8565b8114612cfc57600080fd5b5056fea26469706673582212209593bf2f600ff6aed8cbd9bb33e6582a4967f74e6daae5adc19b610cb06e795164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3897:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:258:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:74:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "178:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "136:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:49:9"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "121:14:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:65:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "202:5:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "209:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "195:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "195:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "225:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "240:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "247:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "236:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:16:9"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "229:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "290:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "299:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "302:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "292:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "271:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "276:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "267:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "267:16:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "285:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "264:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "261:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "337:3:9"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "342:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "347:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "315:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:39:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "315:39:9"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:9",
                "type": ""
              }
            ],
            "src": "7:353:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "454:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "448:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "439:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "497:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "470:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "470:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "407:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "415:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "423:5:9",
                "type": ""
              }
            ],
            "src": "366:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "602:215:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "651:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "663:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "653:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "653:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "653:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "630:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "638:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "626:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "626:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "645:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "615:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "612:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "676:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "696:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "690:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "680:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "712:99:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "784:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:17:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "799:6:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "807:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "721:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:90:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "712:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "580:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "588:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "596:5:9",
                "type": ""
              }
            ],
            "src": "529:288:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "981:913:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1028:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1037:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1040:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1030:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1002:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1011:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "998:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "998:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1023:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "994:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "991:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1054:224:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1069:38:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1093:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1104:1:9",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1089:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1089:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1083:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1083:24:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1073:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1154:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1163:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1166:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1156:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1156:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1156:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1126:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1134:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1123:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1123:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "1120:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1184:84:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1240:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1251:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1236:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1236:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1260:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1194:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1194:74:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1184:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1288:225:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1303:39:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1327:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1338:2:9",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1323:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1323:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1317:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1317:25:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1307:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1389:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1398:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1401:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1391:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1391:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1391:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1361:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1369:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1358:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1358:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "1355:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1419:84:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1475:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1486:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1471:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1471:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1495:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1429:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1429:74:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1419:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1523:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1538:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1552:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1542:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1568:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1614:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1625:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1610:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1610:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1634:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1578:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1578:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1568:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1662:225:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1677:39:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1701:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1712:2:9",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1697:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1697:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1691:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1691:25:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1681:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1763:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1772:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1775:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1765:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1765:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1765:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1735:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1743:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1732:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "1729:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1793:84:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1849:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1860:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1845:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1845:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1869:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1803:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:74:9"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1793:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "927:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "938:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "950:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "958:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "966:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "974:6:9",
                "type": ""
              }
            ],
            "src": "823:1071:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1940:243:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1950:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1966:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1960:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1950:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1978:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2000:6:9"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2008:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:17:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1982:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2124:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2126:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2126:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2126:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2067:10:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2079:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2064:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:34:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2103:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2115:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2100:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2061:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:62:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2058:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2162:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2166:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2155:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2155:22:9"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1924:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1933:6:9",
                "type": ""
              }
            ],
            "src": "1900:283:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2256:265:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2361:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2363:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2363:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2363:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2333:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2341:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2330:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2327:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2413:41:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2429:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2437:4:9",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2448:4:9",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2444:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2444:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2421:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2421:33:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2413:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2491:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2503:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2509:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2499:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2499:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2491:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2240:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2251:4:9",
                "type": ""
              }
            ],
            "src": "2189:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2572:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2582:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2611:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2593:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2582:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2554:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2564:7:9",
                "type": ""
              }
            ],
            "src": "2527:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2674:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2684:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2699:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2695:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2684:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2656:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2666:7:9",
                "type": ""
              }
            ],
            "src": "2629:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2810:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2820:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2829:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2824:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2889:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2914:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2919:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2910:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2910:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2933:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2938:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2929:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2929:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2923:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2923:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2903:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2903:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2903:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2850:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2853:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2847:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2861:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2863:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2872:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2875:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2868:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2868:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2863:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2843:3:9",
                    "statements": []
                  },
                  "src": "2839:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2986:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3036:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3041:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3032:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3032:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3050:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3025:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3025:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3025:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2967:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2970:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2964:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2964:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2961:2:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2792:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2797:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2802:6:9",
                "type": ""
              }
            ],
            "src": "2761:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3125:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3149:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3155:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3145:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3135:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3166:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3196:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3202:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3192:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3192:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3170:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3243:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3257:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3271:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3279:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3267:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3267:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3257:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3223:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3216:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3216:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3213:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3346:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "3360:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3360:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3360:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3310:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3333:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3341:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3330:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3330:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3307:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3307:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3304:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3109:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3118:6:9",
                "type": ""
              }
            ],
            "src": "3074:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3428:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3445:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3448:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3438:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3438:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3438:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3542:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3545:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3535:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3535:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3535:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3566:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3569:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3559:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3559:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3559:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "3400:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3631:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3634:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3624:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3624:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3728:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3731:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3721:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3721:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3752:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3755:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3745:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3745:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3586:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3815:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3872:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3881:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3884:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3874:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3874:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3874:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3838:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3863:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3845:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3845:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3835:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3835:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3828:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3828:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3825:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3808:5:9",
                "type": ""
              }
            ],
            "src": "3772:122:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22471:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:9"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:9"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:9"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:9"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:9",
                "type": ""
              }
            ],
            "src": "7:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:9",
                "type": ""
              }
            ],
            "src": "357:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:9",
                "type": ""
              }
            ],
            "src": "516:273:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "847:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "857:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "879:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "857:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "922:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "895:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "825:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "833:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "841:5:9",
                "type": ""
              }
            ],
            "src": "795:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1064:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1157:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1168:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1153:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1153:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1177:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1132:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "976:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "987:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "999:6:9",
                "type": ""
              }
            ],
            "src": "940:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1291:324:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1337:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1346:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1349:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1312:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1321:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1308:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1308:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1333:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1304:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1301:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1363:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1378:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1392:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1382:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1407:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1442:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1453:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1438:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1438:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1462:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1417:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1417:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1407:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1490:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1505:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1509:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1535:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1570:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1581:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1566:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1566:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1590:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1545:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1545:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1535:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1253:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1264:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1276:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1284:6:9",
                "type": ""
              }
            ],
            "src": "1208:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1721:452:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1767:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1776:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1779:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1769:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1769:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1769:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1742:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1751:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1738:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1763:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1734:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1734:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1731:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1793:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1808:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1812:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1837:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1872:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1883:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1868:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1868:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1892:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1847:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1847:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1837:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1920:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1935:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1949:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1939:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1965:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2000:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2011:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1996:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1996:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2020:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1975:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1975:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1965:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2048:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2063:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2077:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2067:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2093:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2128:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2139:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2124:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2124:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2148:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2103:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2093:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1675:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1686:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1698:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1706:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1714:6:9",
                "type": ""
              }
            ],
            "src": "1621:552:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2262:324:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2308:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2317:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2320:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2310:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2310:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2310:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2283:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2292:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2279:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2279:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2304:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2275:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2272:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2334:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2349:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2363:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2353:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2378:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2413:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2424:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2409:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2409:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2433:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2388:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2378:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2461:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2476:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2480:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2506:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2541:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2552:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2537:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2537:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2561:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2516:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2516:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2506:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2224:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2235:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2247:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2255:6:9",
                "type": ""
              }
            ],
            "src": "2179:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2668:299:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2714:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2723:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2726:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2716:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2716:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2716:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2689:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2698:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2685:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2685:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2710:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2681:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2678:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2740:220:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2755:45:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2786:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2797:1:9",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2782:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2782:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2769:12:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2769:31:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2759:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2847:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2856:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2859:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2849:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2849:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2849:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2819:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2827:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2816:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2816:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "2813:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2877:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2922:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2933:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2918:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2918:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2942:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2887:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2887:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2877:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2638:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2649:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2661:6:9",
                "type": ""
              }
            ],
            "src": "2592:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3039:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3085:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3094:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3097:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3087:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3087:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3087:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3060:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3069:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3056:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3081:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3052:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3052:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3049:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3111:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3126:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3140:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3130:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3155:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3190:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3201:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3186:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3186:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3210:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3165:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3155:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3009:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3020:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3032:6:9",
                "type": ""
              }
            ],
            "src": "2973:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3351:555:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3397:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3406:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3409:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3399:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3399:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3399:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3372:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3381:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3368:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3368:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3393:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3364:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3364:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3361:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3423:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3438:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3452:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3442:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3467:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3502:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3513:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3498:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3498:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3522:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3477:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3477:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3467:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3550:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3565:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3579:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3569:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3595:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3630:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3641:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3626:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3626:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3650:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3605:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3605:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3595:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3678:221:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3693:46:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3724:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3735:2:9",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3720:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3720:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3707:12:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3707:32:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3697:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3786:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3795:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3798:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3788:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3788:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3788:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3758:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3766:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3755:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3755:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "3752:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3816:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3861:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3872:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3857:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3857:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3881:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3826:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3816:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3305:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3316:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3328:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3336:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3344:6:9",
                "type": ""
              }
            ],
            "src": "3241:665:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4005:427:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4051:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4060:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4063:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4053:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4053:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4053:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4026:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4035:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4022:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4022:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4047:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4018:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4018:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4015:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4077:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4092:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4106:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4096:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4121:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4156:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4167:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4152:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4152:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4176:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4131:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4131:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4121:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4204:221:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4219:46:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4250:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4261:2:9",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4246:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4246:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4233:12:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:32:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4223:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4312:16:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4321:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4324:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4314:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4314:12:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4314:12:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4284:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4292:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4281:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4281:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "4278:2:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4342:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4387:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4398:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4383:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4383:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4407:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4352:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4352:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4342:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3967:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3978:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3990:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3998:6:9",
                "type": ""
              }
            ],
            "src": "3912:520:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4503:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4520:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4543:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4525:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4513:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4513:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4491:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4498:3:9",
                "type": ""
              }
            ],
            "src": "4438:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4621:50:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4638:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4658:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4643:14:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4643:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4631:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4631:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4631:34:9"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4609:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4616:3:9",
                "type": ""
              }
            ],
            "src": "4562:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4769:272:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4779:53:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4826:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4793:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:39:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4783:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4841:78:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4907:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4912:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4848:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4848:71:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4841:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4954:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4961:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4950:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4968:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4973:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4928:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4928:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4928:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4989:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5000:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5027:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5005:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5005:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4996:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4996:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4989:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4750:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4757:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4765:3:9",
                "type": ""
              }
            ],
            "src": "4677:364:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5157:267:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5167:53:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5214:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5181:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5181:39:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5171:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5229:96:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5313:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5318:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5236:76:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5236:89:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5229:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5360:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5356:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5356:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5374:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5379:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5334:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5334:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5334:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5395:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5406:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5411:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5402:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5395:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5138:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5145:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5153:3:9",
                "type": ""
              }
            ],
            "src": "5047:377:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5576:183:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5586:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5652:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5657:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5593:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5593:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5586:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5681:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5686:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5677:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5677:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5690:33:9",
                        "type": "",
                        "value": "Only AMFEIX can use this method"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5670:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5670:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5670:54:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5734:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5745:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5750:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5741:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5734:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5564:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5572:3:9",
                "type": ""
              }
            ],
            "src": "5430:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5911:221:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5921:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5987:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5992:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5928:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5928:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5921:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6016:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6021:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6012:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6012:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6025:34:9",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6005:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6005:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6081:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6086:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6077:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6077:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6091:5:9",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6070:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6070:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6070:27:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6107:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6118:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6123:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6114:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6114:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6107:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5899:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5907:3:9",
                "type": ""
              }
            ],
            "src": "5765:367:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6284:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6294:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6360:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6365:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6301:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6301:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6294:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6389:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6394:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6398:34:9",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6454:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6459:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6450:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6450:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6464:4:9",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6443:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6443:26:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6443:26:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6490:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6495:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6479:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6272:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6280:3:9",
                "type": ""
              }
            ],
            "src": "6138:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6656:224:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6666:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6732:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6737:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6673:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6673:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6666:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6761:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6766:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6757:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6757:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6770:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6750:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6750:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6750:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6826:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6831:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6822:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6822:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6836:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6815:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6815:30:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6855:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6866:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6862:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6644:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6652:3:9",
                "type": ""
              }
            ],
            "src": "6510:370:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7032:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7042:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7108:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7113:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7049:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7049:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7042:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7137:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7142:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7133:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7133:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7146:34:9",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7126:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7126:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7126:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7202:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7207:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7198:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7198:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7212:4:9",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7191:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7191:26:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7191:26:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7227:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7238:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7243:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7234:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7234:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7227:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7020:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7028:3:9",
                "type": ""
              }
            ],
            "src": "6886:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7404:224:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7414:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7480:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7485:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7421:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7414:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7509:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7514:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7505:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7505:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7518:34:9",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7498:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7498:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7498:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7574:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7579:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7570:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7570:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7584:8:9",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7563:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7563:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7563:30:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7603:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7614:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7619:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7610:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7610:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7603:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7392:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7400:3:9",
                "type": ""
              }
            ],
            "src": "7258:370:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7780:236:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7790:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7856:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7861:2:9",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7797:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7797:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7790:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7885:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7890:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7881:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7881:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7894:34:9",
                        "type": "",
                        "value": "current minimum withrawal is ${_"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7874:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7874:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7874:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7950:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7955:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7946:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7946:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7960:20:9",
                        "type": "",
                        "value": "minimumWithdrawal}"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7939:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7939:42:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7939:42:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7991:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8002:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8007:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7998:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7991:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7768:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7776:3:9",
                "type": ""
              }
            ],
            "src": "7634:382:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8168:226:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8178:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8244:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8249:2:9",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8185:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8178:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8273:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8278:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8269:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8269:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8282:34:9",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8262:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8262:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8262:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8338:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8343:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8334:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8334:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8348:10:9",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8327:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8327:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8327:32:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8369:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8380:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8385:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8376:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8376:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8369:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8156:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8164:3:9",
                "type": ""
              }
            ],
            "src": "8022:372:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8546:184:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8556:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8622:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8627:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8563:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8563:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8556:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8651:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8656:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8647:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8647:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8660:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8640:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8640:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8640:55:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8705:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8716:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8721:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8712:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8712:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8705:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8534:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8542:3:9",
                "type": ""
              }
            ],
            "src": "8400:330:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8882:219:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8892:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8958:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8963:2:9",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8899:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8892:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8987:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8992:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8983:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8983:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8996:34:9",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8976:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8976:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8976:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9052:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9057:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9048:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9048:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9062:3:9",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9041:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9041:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9041:25:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9076:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9087:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9092:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9083:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9083:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9076:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8870:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8878:3:9",
                "type": ""
              }
            ],
            "src": "8736:365:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9253:223:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9263:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9329:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9334:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9270:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9270:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9263:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9358:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9363:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9354:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9354:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9367:34:9",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9347:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9347:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9347:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9423:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9428:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9419:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9419:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9433:7:9",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9412:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9412:29:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9412:29:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9451:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9462:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9467:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9458:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9458:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9451:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9241:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9249:3:9",
                "type": ""
              }
            ],
            "src": "9107:369:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9628:222:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9638:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9704:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9709:2:9",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9645:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9645:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9638:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9733:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9738:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9729:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9729:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9742:34:9",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9722:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9722:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9722:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9798:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9803:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9794:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9794:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9808:6:9",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9787:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9787:28:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9787:28:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9825:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9836:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9841:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9832:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9832:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9825:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9616:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9624:3:9",
                "type": ""
              }
            ],
            "src": "9482:368:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10002:223:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10078:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10083:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10019:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10019:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10012:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10107:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10112:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10103:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10103:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10116:34:9",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10096:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10096:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10096:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10172:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10177:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10168:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10168:12:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10182:7:9",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10161:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10161:29:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10161:29:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10200:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10211:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10216:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10207:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10207:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10200:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9990:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9998:3:9",
                "type": ""
              }
            ],
            "src": "9856:369:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10377:183:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10387:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10453:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10458:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10394:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10394:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10387:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10482:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10487:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10478:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10478:11:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10491:33:9",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10471:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10471:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10471:54:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10535:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10546:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10551:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10542:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10542:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10535:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10365:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10373:3:9",
                "type": ""
              }
            ],
            "src": "10231:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10631:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10648:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10671:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10653:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10653:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10641:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10641:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10641:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10619:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10626:3:9",
                "type": ""
              }
            ],
            "src": "10566:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10751:51:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10768:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10789:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "10773:15:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10773:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10761:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10761:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10761:35:9"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10739:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10746:3:9",
                "type": ""
              }
            ],
            "src": "10690:112:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10944:139:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10955:102:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11044:6:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11053:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10962:81:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10962:95:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10955:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11067:10:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11074:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11067:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10923:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10929:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10940:3:9",
                "type": ""
              }
            ],
            "src": "10808:275:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11187:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11197:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11209:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11220:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11205:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11205:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11197:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11277:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11290:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11301:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11286:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11286:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11233:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11233:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11233:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11159:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11171:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11182:4:9",
                "type": ""
              }
            ],
            "src": "11089:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11409:118:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11419:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11431:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11442:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11427:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11427:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11419:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11493:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11506:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11517:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11502:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11502:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11455:37:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11455:65:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11455:65:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11381:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11393:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11404:4:9",
                "type": ""
              }
            ],
            "src": "11317:210:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11651:195:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11661:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11673:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11684:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11669:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11669:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11661:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11708:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11719:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11704:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11704:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11727:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11733:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11723:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11723:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11697:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11697:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11697:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11753:86:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11825:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11834:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11761:63:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11761:78:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11753:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11623:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11635:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11646:4:9",
                "type": ""
              }
            ],
            "src": "11533:313:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11998:277:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12008:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12020:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12031:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12016:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12016:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12008:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12055:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12066:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12051:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12051:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12074:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12080:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12070:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12070:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12044:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12044:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12044:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12100:86:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12172:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12181:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12108:63:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12108:78:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12100:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12240:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12253:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12264:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12249:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12249:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12196:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12196:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12196:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11962:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11974:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11982:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11993:4:9",
                "type": ""
              }
            ],
            "src": "11852:423:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12452:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12462:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12474:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12485:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12470:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12470:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12462:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12509:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12520:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12505:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12505:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12528:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12534:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12524:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12524:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12498:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12498:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12498:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12554:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12688:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12562:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12562:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12554:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12432:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12447:4:9",
                "type": ""
              }
            ],
            "src": "12281:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12877:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12887:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12899:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12910:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12895:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12895:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12887:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12934:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12945:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12930:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12930:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12953:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12959:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12949:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12949:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12923:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12923:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12923:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12979:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13113:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12987:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12979:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12857:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12872:4:9",
                "type": ""
              }
            ],
            "src": "12706:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13302:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13312:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13324:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13335:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13320:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13320:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13312:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13359:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13370:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13355:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13355:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13378:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13384:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13374:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13374:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13348:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13348:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13348:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13404:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13538:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13412:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13412:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13404:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13282:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13297:4:9",
                "type": ""
              }
            ],
            "src": "13131:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13727:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13737:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13749:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13760:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13745:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13745:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13737:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13784:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13795:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13780:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13780:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13803:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13809:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13799:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13799:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13773:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13773:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13773:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13829:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13963:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13837:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13837:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13829:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13707:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13722:4:9",
                "type": ""
              }
            ],
            "src": "13556:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14152:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14162:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14174:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14185:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14170:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14170:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14162:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14209:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14220:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14205:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14205:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14228:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14234:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14224:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14224:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14198:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14198:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14198:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14254:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14388:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14262:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14262:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14254:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14132:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14147:4:9",
                "type": ""
              }
            ],
            "src": "13981:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14577:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14587:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14599:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14610:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14595:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14595:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14587:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14634:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14645:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14630:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14630:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14653:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14659:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14649:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14649:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14623:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14623:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14623:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14679:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14813:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14687:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14687:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14679:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14557:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14572:4:9",
                "type": ""
              }
            ],
            "src": "14406:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15002:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15012:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15024:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15035:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15020:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15020:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15012:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15059:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15070:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15055:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15055:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15078:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15084:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15074:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15074:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15048:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15048:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15048:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15104:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15238:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15112:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15112:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15104:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14982:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14997:4:9",
                "type": ""
              }
            ],
            "src": "14831:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15427:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15437:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15449:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15460:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15445:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15445:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15437:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15484:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15495:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15480:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15480:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15503:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15509:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15499:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15499:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15473:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15473:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15473:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15529:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15663:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15537:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15537:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15529:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15407:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15422:4:9",
                "type": ""
              }
            ],
            "src": "15256:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15852:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15862:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15874:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15885:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15870:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15870:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15862:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15909:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15920:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15905:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15905:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15928:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15934:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15924:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15924:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15898:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15898:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15898:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15954:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16088:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15962:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15962:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15954:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15832:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15847:4:9",
                "type": ""
              }
            ],
            "src": "15681:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16277:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16287:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16299:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16310:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16295:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16295:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16287:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16334:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16345:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16330:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16330:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16353:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16359:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16349:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16349:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16323:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16323:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16323:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16379:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16513:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16387:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16387:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16379:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16257:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16272:4:9",
                "type": ""
              }
            ],
            "src": "16106:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16702:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16712:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16724:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16735:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16720:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16720:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16712:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16759:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16770:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16755:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16755:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16778:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16784:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16774:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16774:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16748:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16748:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16748:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16804:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16938:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16812:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16812:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16804:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16682:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16697:4:9",
                "type": ""
              }
            ],
            "src": "16531:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17127:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17137:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17149:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17160:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17145:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17145:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17137:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17184:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17195:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17180:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17180:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17203:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17209:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17199:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17199:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17173:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17173:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17173:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17229:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17363:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17237:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17237:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17229:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17107:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17122:4:9",
                "type": ""
              }
            ],
            "src": "16956:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17552:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17562:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17574:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17585:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17570:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17570:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17562:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17609:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17620:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17605:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17605:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17628:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17634:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17624:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17624:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17598:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17598:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17598:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17654:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17788:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17662:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17662:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17654:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17532:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17547:4:9",
                "type": ""
              }
            ],
            "src": "17381:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17977:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17987:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17999:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18010:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17995:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17995:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17987:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18034:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18045:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18030:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18030:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18053:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18059:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18049:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18049:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18023:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18023:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18023:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18079:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18213:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18087:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18087:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18079:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17957:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17972:4:9",
                "type": ""
              }
            ],
            "src": "17806:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18329:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18339:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18351:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18362:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18347:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18347:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18339:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18419:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18432:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18443:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18428:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18428:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18375:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18375:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18375:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18301:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18313:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18324:4:9",
                "type": ""
              }
            ],
            "src": "18231:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18553:120:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18563:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18575:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18586:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18571:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18571:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18563:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18639:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18652:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18663:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18648:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18648:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18599:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18599:67:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18599:67:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18525:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18537:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18548:4:9",
                "type": ""
              }
            ],
            "src": "18459:214:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18719:243:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18729:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18745:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18739:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18739:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "18729:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18757:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "18779:6:9"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "18787:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18775:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18775:17:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "18761:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18903:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "18905:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18905:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18905:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "18846:10:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18858:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "18843:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18843:34:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "18882:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18894:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18879:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18879:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "18840:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18840:62:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18837:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18941:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "18945:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18934:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18934:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18934:22:9"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "18703:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18712:6:9",
                "type": ""
              }
            ],
            "src": "18679:283:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19035:265:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19140:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19142:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19142:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19142:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19112:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19120:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19109:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19109:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19106:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19192:41:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19208:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19216:4:9",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19204:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19204:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19227:4:9",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "19223:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19223:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19200:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19200:33:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19192:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19270:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "19282:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19288:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19278:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19278:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19270:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19019:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19030:4:9",
                "type": ""
              }
            ],
            "src": "18968:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19365:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19376:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19392:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19386:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19386:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "19376:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19348:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19358:6:9",
                "type": ""
              }
            ],
            "src": "19306:99:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19507:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19524:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19529:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19517:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19517:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19517:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19545:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19564:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19569:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19560:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19560:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "19545:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19479:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19484:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "19495:11:9",
                "type": ""
              }
            ],
            "src": "19411:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19700:34:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19710:18:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "19725:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "19710:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19672:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19677:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "19688:11:9",
                "type": ""
              }
            ],
            "src": "19586:148:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19784:261:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19794:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19817:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19799:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19799:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19794:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19828:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19851:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19833:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19833:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19828:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19991:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19993:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19993:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19993:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19912:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19919:66:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19987:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19915:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19915:74:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19909:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19909:81:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19906:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20023:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20034:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20037:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20030:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20030:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "20023:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19771:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19774:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19780:3:9",
                "type": ""
              }
            ],
            "src": "19740:305:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20096:146:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20106:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20129:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20111:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20111:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20106:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20140:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20163:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20145:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20145:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20140:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20187:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20189:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20189:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20189:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20181:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20184:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20178:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20178:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "20175:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20219:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20231:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20234:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20227:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20227:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20219:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20082:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20085:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20091:4:9",
                "type": ""
              }
            ],
            "src": "20051:191:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20293:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20303:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20332:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "20314:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20314:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20303:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20275:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20285:7:9",
                "type": ""
              }
            ],
            "src": "20248:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20392:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20402:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20427:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20420:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20420:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20413:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20413:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20402:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20374:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20384:7:9",
                "type": ""
              }
            ],
            "src": "20350:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20491:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20501:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20516:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20523:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20512:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20512:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20501:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20473:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20483:7:9",
                "type": ""
              }
            ],
            "src": "20446:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20623:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20633:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20644:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20633:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20605:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20615:7:9",
                "type": ""
              }
            ],
            "src": "20578:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20704:43:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20714:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20729:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20736:4:9",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20725:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20725:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20714:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20686:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20696:7:9",
                "type": ""
              }
            ],
            "src": "20661:86:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20804:103:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "20827:3:9"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "20832:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20837:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "20814:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20814:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20814:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "20885:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "20890:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20881:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20881:16:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20899:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20874:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20874:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20874:27:9"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "20786:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "20791:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20796:6:9",
                "type": ""
              }
            ],
            "src": "20753:154:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20962:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20972:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20981:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "20976:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21041:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "21066:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "21071:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "21062:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21062:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "21085:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "21090:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "21081:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21081:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "21075:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21075:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21055:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21055:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21055:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "21002:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21005:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20999:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20999:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "21013:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21015:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "21024:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21027:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21020:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21020:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "21015:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "20995:3:9",
                    "statements": []
                  },
                  "src": "20991:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21138:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "21188:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21193:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "21184:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21184:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21202:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21177:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21177:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21177:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "21119:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21122:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "21116:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21116:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "21113:2:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "20944:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "20949:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20954:6:9",
                "type": ""
              }
            ],
            "src": "20913:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21277:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21287:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "21301:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21307:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "21297:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21297:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "21287:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21318:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "21348:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21354:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21344:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21344:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "21322:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21395:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21409:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "21423:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21431:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21419:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21419:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21409:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21375:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21368:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21368:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "21365:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21498:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "21512:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21512:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21512:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21462:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21485:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21493:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "21482:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21482:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21459:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21459:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "21456:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "21261:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21270:6:9",
                "type": ""
              }
            ],
            "src": "21226:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21580:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21597:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21600:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21590:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21590:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21590:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21694:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21697:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21687:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21687:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21687:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21718:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21721:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21711:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21711:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21711:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "21552:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21766:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21783:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21786:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21776:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21776:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21776:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21880:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21883:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21873:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21873:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21873:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21904:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21907:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21897:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21897:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21897:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "21738:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21952:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21969:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21972:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21962:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21962:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21962:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22066:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22069:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22059:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22059:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22059:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22090:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22093:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22083:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22083:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22083:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "21924:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22158:54:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22168:38:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "22186:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22193:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22182:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22182:14:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22202:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22198:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22198:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "22178:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22178:28:9"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "22168:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22141:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "22151:6:9",
                "type": ""
              }
            ],
            "src": "22110:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22261:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22318:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22327:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22330:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22320:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22320:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22320:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "22284:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22309:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "22291:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22291:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "22281:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22281:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22274:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22274:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "22271:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22254:5:9",
                "type": ""
              }
            ],
            "src": "22218:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22389:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22446:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22455:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22458:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22448:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22448:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22448:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "22412:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22437:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "22419:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22419:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "22409:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22409:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22402:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22402:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "22399:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22382:5:9",
                "type": ""
              }
            ],
            "src": "22346:122:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"Only AMFEIX can use this method\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(pos, 32), \"ce\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(pos, 32), \"ss\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(pos, 32), \"alance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n\n        mstore(add(pos, 0), \"current minimum withrawal is ${_\")\n\n        mstore(add(pos, 32), \"minimumWithdrawal}\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(pos, 32), \"llowance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(pos, 32), \"s\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(pos, 32), \"ress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(pos, 32), \" zero\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"ERC20: mint to the zero address\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "372:7121:0:-:0;;;617:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;909:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1061:5;1067:7;1973:5:5;1965;:13;;;;;;;;;;;;:::i;:::-;;1998:7;1988;:17;;;;;;;;;;;;:::i;:::-;;1898:114;;867:17:4;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;1113:6:0::2;1100:10;:19;;;;1170:10;1157;;:23;;;;;;;;;;;;;;;;;;1241:8;1230;:19;;;;;;;;;;;;:::i;:::-;;1320:4;1299:18;:25;;;;909:460:::0;;;;372:7121;;7063:164;7146:15;7188:31;:29;;;;;:31;;:::i;:::-;7173:47;;7063:164;:::o;863:565:2:-;925:19;979:2;960:8;;:15;;:21;;:55;;;;;985:30;1004:10;985:18;;;:30;;:::i;:::-;960:55;956:466;;;1336:2;1321:14;1317:22;1304:36;1301:2;1297:44;1290:51;;1272:83;;;1400:10;1385:26;;;;956:466;863:565;;:::o;476:135::-;552:4;588:16;;;;;;;;;;;575:29;;:9;:29;;;568:36;;476:135;;;:::o;372:7121:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:9:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;366:143::-;;454:6;448:13;439:22;;470:33;497:5;470:33;:::i;:::-;429:80;;;;:::o;529:288::-;;645:3;638:4;630:6;626:17;622:27;612:2;;663:1;660;653:12;612:2;696:6;690:13;721:90;807:3;799:6;792:4;784:6;780:17;721:90;:::i;:::-;712:99;;602:215;;;;;:::o;823:1071::-;;;;;1023:3;1011:9;1002:7;998:23;994:33;991:2;;;1040:1;1037;1030:12;991:2;1104:1;1093:9;1089:17;1083:24;1134:18;1126:6;1123:30;1120:2;;;1166:1;1163;1156:12;1120:2;1194:74;1260:7;1251:6;1240:9;1236:22;1194:74;:::i;:::-;1184:84;;1054:224;1338:2;1327:9;1323:18;1317:25;1369:18;1361:6;1358:30;1355:2;;;1401:1;1398;1391:12;1355:2;1429:74;1495:7;1486:6;1475:9;1471:22;1429:74;:::i;:::-;1419:84;;1288:225;1552:2;1578:64;1634:7;1625:6;1614:9;1610:22;1578:64;:::i;:::-;1568:74;;1523:129;1712:2;1701:9;1697:18;1691:25;1743:18;1735:6;1732:30;1729:2;;;1775:1;1772;1765:12;1729:2;1803:74;1869:7;1860:6;1849:9;1845:22;1803:74;:::i;:::-;1793:84;;1662:225;981:913;;;;;;;:::o;1900:283::-;;1966:2;1960:9;1950:19;;2008:4;2000:6;1996:17;2115:6;2103:10;2100:22;2079:18;2067:10;2064:34;2061:62;2058:2;;;2126:18;;:::i;:::-;2058:2;2166:10;2162:2;2155:22;1940:243;;;;:::o;2189:332::-;;2341:18;2333:6;2330:30;2327:2;;;2363:18;;:::i;:::-;2327:2;2448:4;2444:9;2437:4;2429:6;2425:17;2421:33;2413:41;;2509:4;2503;2499:15;2491:23;;2256:265;;;:::o;2527:96::-;;2593:24;2611:5;2593:24;:::i;:::-;2582:35;;2572:51;;;:::o;2629:126::-;;2706:42;2699:5;2695:54;2684:65;;2674:81;;;:::o;2761:307::-;2829:1;2839:113;2853:6;2850:1;2847:13;2839:113;;;2938:1;2933:3;2929:11;2923:18;2919:1;2914:3;2910:11;2903:39;2875:2;2872:1;2868:10;2863:15;;2839:113;;;2970:6;2967:1;2964:13;2961:2;;;3050:1;3041:6;3036:3;3032:16;3025:27;2961:2;2810:258;;;;:::o;3074:320::-;;3155:1;3149:4;3145:12;3135:22;;3202:1;3196:4;3192:12;3223:18;3213:2;;3279:4;3271:6;3267:17;3257:27;;3213:2;3341;3333:6;3330:14;3310:18;3307:38;3304:2;;;3360:18;;:::i;:::-;3304:2;3125:269;;;;:::o;3400:180::-;3448:77;3445:1;3438:88;3545:4;3542:1;3535:15;3569:4;3566:1;3559:15;3586:180;3634:77;3631:1;3624:88;3731:4;3728:1;3721:15;3755:4;3752:1;3745:15;3772:122;3845:24;3863:5;3845:24;:::i;:::-;3838:5;3835:35;3825:2;;3884:1;3881;3874:12;3825:2;3815:79;:::o;372:7121:0:-;;;;;;;",
  "deployedSourceMap": "372:7121:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3165:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4807:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3014:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2624:218:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5616:212:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4769:105:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1583:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1907:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;476:135:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6540:335:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3329:125:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:4;;;:::i;:::-;;438:31:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4060:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6315:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3657:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5703:361:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7388:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3666:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3375:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3887:149:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4336:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2303:118:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:98:5;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;4282:12;:10;:12::i;:::-;4296:7;4305:6;4273:8;:39::i;:::-;4329:4;4322:11;;4174:166;;;;:::o;3165:106::-;3226:7;3252:12;;3245:19;;3165:106;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;4976:24;5003:11;:19;5015:6;5003:19;;;;;;;;;;;;;;;:33;5023:12;:10;:12::i;:::-;5003:33;;;;;;;;;;;;;;;;4976:60;;5074:6;5054:16;:26;;5046:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5135:57;5144:6;5152:12;:10;:12::i;:::-;5185:6;5166:16;:25;;;;:::i;:::-;5135:8;:57::i;:::-;5210:4;5203:11;;;4807:414;;;;;:::o;3014:91::-;3072:5;3096:2;3089:9;;3014:91;:::o;2624:218:0:-;2716:4;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2753:10:0::1;2732:18;:31;;;;2803:10;2778:36;;;;;;;;;;2831:4;2824:11;;2624:218:::0;;;:::o;5616:212:5:-;5704:4;5720:80;5729:12;:10;:12::i;:::-;5743:7;5789:10;5752:11;:25;5764:12;:10;:12::i;:::-;5752:25;;;;;;;;;;;;;;;:34;5778:7;5752:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5720:8;:80::i;:::-;5817:4;5810:11;;5616:212;;;;:::o;4769:105:0:-;4827:13;4859:8;4852:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4769:105;:::o;1583:156::-;1666:7;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1685:24:0::1;1691:9;1702:6;1685:5;:24::i;:::-;1726:6;1719:13;;1583:156:::0;;;;:::o;1907:125::-;1961:4;1977:27;1983:12;:10;:12::i;:::-;1997:6;1977:5;:27::i;:::-;2021:4;2014:11;;1907:125;;;:::o;617:49::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;476:135:2:-;552:4;588:16;;;;;;;;;;;575:29;;:9;:29;;;568:36;;476:135;;;:::o;6540:335:0:-;6645:4;6685:10;;;;;;;;;;;6669:26;;:12;:10;:12::i;:::-;:26;;;6661:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6741:49;6751:12;:10;:12::i;:::-;6765:11;6778;6741:9;:49::i;:::-;6813:11;6805:42;;;6826:7;6835:11;6805:42;;;;;;;:::i;:::-;;;;;;;;6864:4;6857:11;;6540:335;;;;;:::o;3329:125:5:-;3403:7;3429:9;:18;3439:7;3429:18;;;;;;;;;;;;;;;;3422:25;;3329:125;;;:::o;1700:145:4:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;;;;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6;;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;438:31:2:-;;;;;;;;;;;;;:::o;5039:202:0:-;5128:4;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5155:10:0::1;5144:8;:21;;;;;;;;;;;;:::i;:::-;;5202:10;5180:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5230:4;5223:11;;5039:202:::0;;;:::o;4060:103::-;4120:7;4146:10;;;;;;;;;;;4139:17;;4060:103;:::o;1068:85:4:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;2288:102:5:-;2344:13;2376:7;2369:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:102;:::o;6315:371::-;6408:4;6424:24;6451:11;:25;6463:12;:10;:12::i;:::-;6451:25;;;;;;;;;;;;;;;:34;6477:7;6451:34;;;;;;;;;;;;;;;;6424:61;;6523:15;6503:16;:35;;6495:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6590:67;6599:12;:10;:12::i;:::-;6613:7;6641:15;6622:16;:34;;;;:::i;:::-;6590:8;:67::i;:::-;6675:4;6668:11;;;6315:371;;;;:::o;3657:172::-;3743:4;3759:42;3769:12;:10;:12::i;:::-;3783:9;3794:6;3759:9;:42::i;:::-;3818:4;3811:11;;3657:172;;;;:::o;5703:361:0:-;5796:4;5836:18;;5821:11;:33;;5812:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5919:48;5929:12;:10;:12::i;:::-;5943:10;;;;;;;;;;;5955:11;5919:9;:48::i;:::-;5994:12;:10;:12::i;:::-;5982:54;;;6008:14;6024:11;5982:54;;;;;;;:::i;:::-;;;;;;;;6053:4;6046:11;;5703:361;;;;:::o;7388:103::-;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7475:9:0::1;7456:16;;:28;;;;;;;;;;;;;;;;;;7388:103:::0;:::o;3666:178::-;3742:4;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3771:8:0::1;3758:10;:21;;;;3807:8;3794:22;;;;;;;;;;3833:4;3826:11;;3666:178:::0;;;:::o;3375:96::-;3428:7;3454:10;;3447:17;;3375:96;:::o;3887:149:5:-;3976:7;4002:11;:18;4014:5;4002:18;;;;;;;;;;;;;;;:27;4021:7;4002:27;;;;;;;;;;;;;;;;3995:34;;3887:149;;;;:::o;4336:202:0:-;4421:4;1291:12:4;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4450:10:0::1;4437;;:23;;;;;;;;;;;;;;;;;;4499:10;4475:35;;;;;;;;;;;;4527:4;4520:11;;4336:202:::0;;;:::o;1994:240:4:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;;;;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;;:17;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;2303:118:0:-;2370:7;2396:18;;2389:25;;2303:118;:::o;863:565:2:-;925:19;979:2;960:8;;:15;;:21;;:55;;;;;985:30;1004:10;985:18;:30::i;:::-;960:55;956:466;;;1336:2;1321:14;1317:22;1304:36;1301:2;1297:44;1290:51;;1272:83;;;1400:10;1385:26;;;;956:466;863:565;;:::o;7063:164:0:-;7146:15;7188:31;:29;:31::i;:::-;7173:47;;7063:164;:::o;9579:340:5:-;9697:1;9680:19;;:5;:19;;;;9672:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9777:1;9758:21;;:7;:21;;;;9750:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9859:6;9829:11;:18;9841:5;9829:18;;;;;;;;;;;;;;;:27;9848:7;9829:27;;;;;;;;;;;;;;;:36;;;;9896:7;9880:32;;9889:5;9880:32;;;9905:6;9880:32;;;;;;:::i;:::-;;;;;;;;9579:340;;;:::o;7160:592::-;7283:1;7265:20;;:6;:20;;;;7257:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7366:1;7345:23;;:9;:23;;;;7337:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;7477:21;7501:9;:17;7511:6;7501:17;;;;;;;;;;;;;;;;7477:41;;7553:6;7536:13;:23;;7528:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7648:6;7632:13;:22;;;;:::i;:::-;7612:9;:17;7622:6;7612:17;;;;;;;;;;;;;;;:42;;;;7688:6;7664:9;:20;7674:9;7664:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7727:9;7710:35;;7719:6;7710:35;;;7738:6;7710:35;;;;;;:::i;:::-;;;;;;;;7160:592;;;;:::o;8023:330::-;8125:1;8106:21;;:7;:21;;;;8098:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;;;;;8288:6;8266:9;:18;8276:7;8266:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8330:7;8309:37;;8326:1;8309:37;;;8339:6;8309:37;;;;;;:::i;:::-;;;;;;;;8023:330;;:::o;8673:483::-;8775:1;8756:21;;:7;:21;;;;8748:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;8886:22;8911:9;:18;8921:7;8911:18;;;;;;;;;;;;;;;;8886:43;;8965:6;8947:14;:24;;8939:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9058:6;9041:14;:23;;;;:::i;:::-;9020:9;:18;9030:7;9020:18;;;;;;;;;;;;;;;:44;;;;9090:6;9074:12;;:22;;;;;;;:::i;:::-;;;;;;;;9138:1;9112:37;;9121:7;9112:37;;;9142:6;9112:37;;;;;;:::i;:::-;;;;;;;;8673:483;;;:::o;10506:92::-;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:9:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:139::-;;879:6;866:20;857:29;;895:33;922:5;895:33;:::i;:::-;847:87;;;;:::o;940:262::-;;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1064:1;1061;1054:12;1016:2;1107:1;1132:53;1177:7;1168:6;1157:9;1153:22;1132:53;:::i;:::-;1122:63;;1078:117;1006:196;;;;:::o;1208:407::-;;;1333:2;1321:9;1312:7;1308:23;1304:32;1301:2;;;1349:1;1346;1339:12;1301:2;1392:1;1417:53;1462:7;1453:6;1442:9;1438:22;1417:53;:::i;:::-;1407:63;;1363:117;1519:2;1545:53;1590:7;1581:6;1570:9;1566:22;1545:53;:::i;:::-;1535:63;;1490:118;1291:324;;;;;:::o;1621:552::-;;;;1763:2;1751:9;1742:7;1738:23;1734:32;1731:2;;;1779:1;1776;1769:12;1731:2;1822:1;1847:53;1892:7;1883:6;1872:9;1868:22;1847:53;:::i;:::-;1837:63;;1793:117;1949:2;1975:53;2020:7;2011:6;2000:9;1996:22;1975:53;:::i;:::-;1965:63;;1920:118;2077:2;2103:53;2148:7;2139:6;2128:9;2124:22;2103:53;:::i;:::-;2093:63;;2048:118;1721:452;;;;;:::o;2179:407::-;;;2304:2;2292:9;2283:7;2279:23;2275:32;2272:2;;;2320:1;2317;2310:12;2272:2;2363:1;2388:53;2433:7;2424:6;2413:9;2409:22;2388:53;:::i;:::-;2378:63;;2334:117;2490:2;2516:53;2561:7;2552:6;2541:9;2537:22;2516:53;:::i;:::-;2506:63;;2461:118;2262:324;;;;;:::o;2592:375::-;;2710:2;2698:9;2689:7;2685:23;2681:32;2678:2;;;2726:1;2723;2716:12;2678:2;2797:1;2786:9;2782:17;2769:31;2827:18;2819:6;2816:30;2813:2;;;2859:1;2856;2849:12;2813:2;2887:63;2942:7;2933:6;2922:9;2918:22;2887:63;:::i;:::-;2877:73;;2740:220;2668:299;;;;:::o;2973:262::-;;3081:2;3069:9;3060:7;3056:23;3052:32;3049:2;;;3097:1;3094;3087:12;3049:2;3140:1;3165:53;3210:7;3201:6;3190:9;3186:22;3165:53;:::i;:::-;3155:63;;3111:117;3039:196;;;;:::o;3241:665::-;;;;3393:2;3381:9;3372:7;3368:23;3364:32;3361:2;;;3409:1;3406;3399:12;3361:2;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3579:2;3605:53;3650:7;3641:6;3630:9;3626:22;3605:53;:::i;:::-;3595:63;;3550:118;3735:2;3724:9;3720:18;3707:32;3766:18;3758:6;3755:30;3752:2;;;3798:1;3795;3788:12;3752:2;3826:63;3881:7;3872:6;3861:9;3857:22;3826:63;:::i;:::-;3816:73;;3678:221;3351:555;;;;;:::o;3912:520::-;;;4047:2;4035:9;4026:7;4022:23;4018:32;4015:2;;;4063:1;4060;4053:12;4015:2;4106:1;4131:53;4176:7;4167:6;4156:9;4152:22;4131:53;:::i;:::-;4121:63;;4077:117;4261:2;4250:9;4246:18;4233:32;4292:18;4284:6;4281:30;4278:2;;;4324:1;4321;4314:12;4278:2;4352:63;4407:7;4398:6;4387:9;4383:22;4352:63;:::i;:::-;4342:73;;4204:221;4005:427;;;;;:::o;4438:118::-;4525:24;4543:5;4525:24;:::i;:::-;4520:3;4513:37;4503:53;;:::o;4562:109::-;4643:21;4658:5;4643:21;:::i;:::-;4638:3;4631:34;4621:50;;:::o;4677:364::-;;4793:39;4826:5;4793:39;:::i;:::-;4848:71;4912:6;4907:3;4848:71;:::i;:::-;4841:78;;4928:52;4973:6;4968:3;4961:4;4954:5;4950:16;4928:52;:::i;:::-;5005:29;5027:6;5005:29;:::i;:::-;5000:3;4996:39;4989:46;;4769:272;;;;;:::o;5047:377::-;;5181:39;5214:5;5181:39;:::i;:::-;5236:89;5318:6;5313:3;5236:89;:::i;:::-;5229:96;;5334:52;5379:6;5374:3;5367:4;5360:5;5356:16;5334:52;:::i;:::-;5411:6;5406:3;5402:16;5395:23;;5157:267;;;;;:::o;5430:329::-;;5593:67;5657:2;5652:3;5593:67;:::i;:::-;5586:74;;5690:33;5686:1;5681:3;5677:11;5670:54;5750:2;5745:3;5741:12;5734:19;;5576:183;;;:::o;5765:367::-;;5928:67;5992:2;5987:3;5928:67;:::i;:::-;5921:74;;6025:34;6021:1;6016:3;6012:11;6005:55;6091:5;6086:2;6081:3;6077:12;6070:27;6123:2;6118:3;6114:12;6107:19;;5911:221;;;:::o;6138:366::-;;6301:67;6365:2;6360:3;6301:67;:::i;:::-;6294:74;;6398:34;6394:1;6389:3;6385:11;6378:55;6464:4;6459:2;6454:3;6450:12;6443:26;6495:2;6490:3;6486:12;6479:19;;6284:220;;;:::o;6510:370::-;;6673:67;6737:2;6732:3;6673:67;:::i;:::-;6666:74;;6770:34;6766:1;6761:3;6757:11;6750:55;6836:8;6831:2;6826:3;6822:12;6815:30;6871:2;6866:3;6862:12;6855:19;;6656:224;;;:::o;6886:366::-;;7049:67;7113:2;7108:3;7049:67;:::i;:::-;7042:74;;7146:34;7142:1;7137:3;7133:11;7126:55;7212:4;7207:2;7202:3;7198:12;7191:26;7243:2;7238:3;7234:12;7227:19;;7032:220;;;:::o;7258:370::-;;7421:67;7485:2;7480:3;7421:67;:::i;:::-;7414:74;;7518:34;7514:1;7509:3;7505:11;7498:55;7584:8;7579:2;7574:3;7570:12;7563:30;7619:2;7614:3;7610:12;7603:19;;7404:224;;;:::o;7634:382::-;;7797:67;7861:2;7856:3;7797:67;:::i;:::-;7790:74;;7894:34;7890:1;7885:3;7881:11;7874:55;7960:20;7955:2;7950:3;7946:12;7939:42;8007:2;8002:3;7998:12;7991:19;;7780:236;;;:::o;8022:372::-;;8185:67;8249:2;8244:3;8185:67;:::i;:::-;8178:74;;8282:34;8278:1;8273:3;8269:11;8262:55;8348:10;8343:2;8338:3;8334:12;8327:32;8385:2;8380:3;8376:12;8369:19;;8168:226;;;:::o;8400:330::-;;8563:67;8627:2;8622:3;8563:67;:::i;:::-;8556:74;;8660:34;8656:1;8651:3;8647:11;8640:55;8721:2;8716:3;8712:12;8705:19;;8546:184;;;:::o;8736:365::-;;8899:67;8963:2;8958:3;8899:67;:::i;:::-;8892:74;;8996:34;8992:1;8987:3;8983:11;8976:55;9062:3;9057:2;9052:3;9048:12;9041:25;9092:2;9087:3;9083:12;9076:19;;8882:219;;;:::o;9107:369::-;;9270:67;9334:2;9329:3;9270:67;:::i;:::-;9263:74;;9367:34;9363:1;9358:3;9354:11;9347:55;9433:7;9428:2;9423:3;9419:12;9412:29;9467:2;9462:3;9458:12;9451:19;;9253:223;;;:::o;9482:368::-;;9645:67;9709:2;9704:3;9645:67;:::i;:::-;9638:74;;9742:34;9738:1;9733:3;9729:11;9722:55;9808:6;9803:2;9798:3;9794:12;9787:28;9841:2;9836:3;9832:12;9825:19;;9628:222;;;:::o;9856:369::-;;10019:67;10083:2;10078:3;10019:67;:::i;:::-;10012:74;;10116:34;10112:1;10107:3;10103:11;10096:55;10182:7;10177:2;10172:3;10168:12;10161:29;10216:2;10211:3;10207:12;10200:19;;10002:223;;;:::o;10231:329::-;;10394:67;10458:2;10453:3;10394:67;:::i;:::-;10387:74;;10491:33;10487:1;10482:3;10478:11;10471:54;10551:2;10546:3;10542:12;10535:19;;10377:183;;;:::o;10566:118::-;10653:24;10671:5;10653:24;:::i;:::-;10648:3;10641:37;10631:53;;:::o;10690:112::-;10773:22;10789:5;10773:22;:::i;:::-;10768:3;10761:35;10751:51;;:::o;10808:275::-;;10962:95;11053:3;11044:6;10962:95;:::i;:::-;10955:102;;11074:3;11067:10;;10944:139;;;;:::o;11089:222::-;;11220:2;11209:9;11205:18;11197:26;;11233:71;11301:1;11290:9;11286:17;11277:6;11233:71;:::i;:::-;11187:124;;;;:::o;11317:210::-;;11442:2;11431:9;11427:18;11419:26;;11455:65;11517:1;11506:9;11502:17;11493:6;11455:65;:::i;:::-;11409:118;;;;:::o;11533:313::-;;11684:2;11673:9;11669:18;11661:26;;11733:9;11727:4;11723:20;11719:1;11708:9;11704:17;11697:47;11761:78;11834:4;11825:6;11761:78;:::i;:::-;11753:86;;11651:195;;;;:::o;11852:423::-;;12031:2;12020:9;12016:18;12008:26;;12080:9;12074:4;12070:20;12066:1;12055:9;12051:17;12044:47;12108:78;12181:4;12172:6;12108:78;:::i;:::-;12100:86;;12196:72;12264:2;12253:9;12249:18;12240:6;12196:72;:::i;:::-;11998:277;;;;;:::o;12281:419::-;;12485:2;12474:9;12470:18;12462:26;;12534:9;12528:4;12524:20;12520:1;12509:9;12505:17;12498:47;12562:131;12688:4;12562:131;:::i;:::-;12554:139;;12452:248;;;:::o;12706:419::-;;12910:2;12899:9;12895:18;12887:26;;12959:9;12953:4;12949:20;12945:1;12934:9;12930:17;12923:47;12987:131;13113:4;12987:131;:::i;:::-;12979:139;;12877:248;;;:::o;13131:419::-;;13335:2;13324:9;13320:18;13312:26;;13384:9;13378:4;13374:20;13370:1;13359:9;13355:17;13348:47;13412:131;13538:4;13412:131;:::i;:::-;13404:139;;13302:248;;;:::o;13556:419::-;;13760:2;13749:9;13745:18;13737:26;;13809:9;13803:4;13799:20;13795:1;13784:9;13780:17;13773:47;13837:131;13963:4;13837:131;:::i;:::-;13829:139;;13727:248;;;:::o;13981:419::-;;14185:2;14174:9;14170:18;14162:26;;14234:9;14228:4;14224:20;14220:1;14209:9;14205:17;14198:47;14262:131;14388:4;14262:131;:::i;:::-;14254:139;;14152:248;;;:::o;14406:419::-;;14610:2;14599:9;14595:18;14587:26;;14659:9;14653:4;14649:20;14645:1;14634:9;14630:17;14623:47;14687:131;14813:4;14687:131;:::i;:::-;14679:139;;14577:248;;;:::o;14831:419::-;;15035:2;15024:9;15020:18;15012:26;;15084:9;15078:4;15074:20;15070:1;15059:9;15055:17;15048:47;15112:131;15238:4;15112:131;:::i;:::-;15104:139;;15002:248;;;:::o;15256:419::-;;15460:2;15449:9;15445:18;15437:26;;15509:9;15503:4;15499:20;15495:1;15484:9;15480:17;15473:47;15537:131;15663:4;15537:131;:::i;:::-;15529:139;;15427:248;;;:::o;15681:419::-;;15885:2;15874:9;15870:18;15862:26;;15934:9;15928:4;15924:20;15920:1;15909:9;15905:17;15898:47;15962:131;16088:4;15962:131;:::i;:::-;15954:139;;15852:248;;;:::o;16106:419::-;;16310:2;16299:9;16295:18;16287:26;;16359:9;16353:4;16349:20;16345:1;16334:9;16330:17;16323:47;16387:131;16513:4;16387:131;:::i;:::-;16379:139;;16277:248;;;:::o;16531:419::-;;16735:2;16724:9;16720:18;16712:26;;16784:9;16778:4;16774:20;16770:1;16759:9;16755:17;16748:47;16812:131;16938:4;16812:131;:::i;:::-;16804:139;;16702:248;;;:::o;16956:419::-;;17160:2;17149:9;17145:18;17137:26;;17209:9;17203:4;17199:20;17195:1;17184:9;17180:17;17173:47;17237:131;17363:4;17237:131;:::i;:::-;17229:139;;17127:248;;;:::o;17381:419::-;;17585:2;17574:9;17570:18;17562:26;;17634:9;17628:4;17624:20;17620:1;17609:9;17605:17;17598:47;17662:131;17788:4;17662:131;:::i;:::-;17654:139;;17552:248;;;:::o;17806:419::-;;18010:2;17999:9;17995:18;17987:26;;18059:9;18053:4;18049:20;18045:1;18034:9;18030:17;18023:47;18087:131;18213:4;18087:131;:::i;:::-;18079:139;;17977:248;;;:::o;18231:222::-;;18362:2;18351:9;18347:18;18339:26;;18375:71;18443:1;18432:9;18428:17;18419:6;18375:71;:::i;:::-;18329:124;;;;:::o;18459:214::-;;18586:2;18575:9;18571:18;18563:26;;18599:67;18663:1;18652:9;18648:17;18639:6;18599:67;:::i;:::-;18553:120;;;;:::o;18679:283::-;;18745:2;18739:9;18729:19;;18787:4;18779:6;18775:17;18894:6;18882:10;18879:22;18858:18;18846:10;18843:34;18840:62;18837:2;;;18905:18;;:::i;:::-;18837:2;18945:10;18941:2;18934:22;18719:243;;;;:::o;18968:332::-;;19120:18;19112:6;19109:30;19106:2;;;19142:18;;:::i;:::-;19106:2;19227:4;19223:9;19216:4;19208:6;19204:17;19200:33;19192:41;;19288:4;19282;19278:15;19270:23;;19035:265;;;:::o;19306:99::-;;19392:5;19386:12;19376:22;;19365:40;;;:::o;19411:169::-;;19529:6;19524:3;19517:19;19569:4;19564:3;19560:14;19545:29;;19507:73;;;;:::o;19586:148::-;;19725:3;19710:18;;19700:34;;;;:::o;19740:305::-;;19799:20;19817:1;19799:20;:::i;:::-;19794:25;;19833:20;19851:1;19833:20;:::i;:::-;19828:25;;19987:1;19919:66;19915:74;19912:1;19909:81;19906:2;;;19993:18;;:::i;:::-;19906:2;20037:1;20034;20030:9;20023:16;;19784:261;;;;:::o;20051:191::-;;20111:20;20129:1;20111:20;:::i;:::-;20106:25;;20145:20;20163:1;20145:20;:::i;:::-;20140:25;;20184:1;20181;20178:8;20175:2;;;20189:18;;:::i;:::-;20175:2;20234:1;20231;20227:9;20219:17;;20096:146;;;;:::o;20248:96::-;;20314:24;20332:5;20314:24;:::i;:::-;20303:35;;20293:51;;;:::o;20350:90::-;;20427:5;20420:13;20413:21;20402:32;;20392:48;;;:::o;20446:126::-;;20523:42;20516:5;20512:54;20501:65;;20491:81;;;:::o;20578:77::-;;20644:5;20633:16;;20623:32;;;:::o;20661:86::-;;20736:4;20729:5;20725:16;20714:27;;20704:43;;;:::o;20753:154::-;20837:6;20832:3;20827;20814:30;20899:1;20890:6;20885:3;20881:16;20874:27;20804:103;;;:::o;20913:307::-;20981:1;20991:113;21005:6;21002:1;20999:13;20991:113;;;21090:1;21085:3;21081:11;21075:18;21071:1;21066:3;21062:11;21055:39;21027:2;21024:1;21020:10;21015:15;;20991:113;;;21122:6;21119:1;21116:13;21113:2;;;21202:1;21193:6;21188:3;21184:16;21177:27;21113:2;20962:258;;;;:::o;21226:320::-;;21307:1;21301:4;21297:12;21287:22;;21354:1;21348:4;21344:12;21375:18;21365:2;;21431:4;21423:6;21419:17;21409:27;;21365:2;21493;21485:6;21482:14;21462:18;21459:38;21456:2;;;21512:18;;:::i;:::-;21456:2;21277:269;;;;:::o;21552:180::-;21600:77;21597:1;21590:88;21697:4;21694:1;21687:15;21721:4;21718:1;21711:15;21738:180;21786:77;21783:1;21776:88;21883:4;21880:1;21873:15;21907:4;21904:1;21897:15;21924:180;21972:77;21969:1;21962:88;22069:4;22066:1;22059:15;22093:4;22090:1;22083:15;22110:102;;22202:2;22198:7;22193:2;22186:5;22182:14;22178:28;22168:38;;22158:54;;;:::o;22218:122::-;22291:24;22309:5;22291:24;:::i;:::-;22284:5;22281:35;22271:2;;22330:1;22327;22320:12;22271:2;22261:79;:::o;22346:122::-;22419:24;22437:5;22419:24;:::i;:::-;22412:5;22409:35;22399:2;;22458:1;22455;22448:12;22399:2;22389:79;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol\";\n\n/**\n * @title AMFEIX ERC20 swap smart contract\n * @dev Contract based on ERC20 standard with \"swap\" features between BTC and AMF\n */\ncontract AMF is ERC20, Ownable, BaseRelayRecipient {\n\n    mapping (address => uint256) private _balances;\n\n    uint256 private _swapRatio;\n    address private _tokenPool;\n    string private _btcPool;\n    uint256 private _minimumWithdrawal;\n\n    string public override versionRecipient = \"2.2.0\";\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (\n        string memory name_, \n        string memory symbol_, \n        address tokenPool_, \n        string memory btcPool_\n        ) ERC20(name_,symbol_) Ownable() {\n            _swapRatio = 100000; // AMF amount for 1 BTC\n            _tokenPool = tokenPool_; // AMFEIX buffer ETH wallet address\n            _btcPool = btcPool_; // AMFEIX buffer BTC wallet address\n            _minimumWithdrawal = 1000; // AMF minimum amount for withdrawals\n    }\n\n    /**\n     * @dev Allows contract owner to create new tokens.\n     * \n     * @param newHolder Ethereum address of the recipient \n     * @param amount The number of tokens the recipient will receive\n     */\n    function mint(address newHolder, uint256 amount) public virtual onlyOwner returns (uint256) {\n        _mint(newHolder, amount);\n        return amount;\n    }\n\n    /**\n     * @dev Allows anyone to destroy its tokens.\n     *\n     * @param amount The number of tokens that sender is willing to burn from its account\n     */\n    function burn(uint256 amount) public virtual returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n    /**\n     * @dev Returns the current AMF minimum withdrawal amount.\n     * \n     * We need this value to prevent users from claiming BTC if the AMF amount is too small.\n     * Main reason is the BTC mining fees AMFEIX is going to pay for this transaction\n     */\n    function getMinimumWithdrawalAmount() public view virtual returns (uint256) {\n        return _minimumWithdrawal;\n    }\n\n    /**\n     * @dev Allows contract owner to update the current AMF minimum withdrawal amount.\n     * \n     * @param newMinimum The updated minimum amount of AMF allowed for BTC withdrawal\n     */\n    function setMinimumWithdrawalAmount(uint256 newMinimum) external virtual onlyOwner returns (bool) {\n        _minimumWithdrawal = newMinimum;\n        emit MinimumWithdrawalChanged(newMinimum);\n        return true;\n    }\n    // Emitted when AMFEIX changes the current AMF minimum withdrawal amount\n    event MinimumWithdrawalChanged (\n        uint256 indexed newMinimum\n    );\n\n    /**\n     * @dev Returns the current swap ratio (how much AMF tokens corresponds to 1 BTC)\n     *      \n     * Initial ratio  100000 AMF : 1 BTC  (1 AMF : 1000 sat)\n     * We need this value to compute the amount of AMF to send to users when they deposited BTC at AMFEIX\n     * and to compute the amount of BTC to send to users when they claim back their BTC.\n     */\n    function getSwapRatio() public view virtual returns (uint256) {\n        return _swapRatio;\n    }\n\n    /**\n     * @dev Allows contract owner to update the current swap ratio (AMF/BTC).\n     * \n     * @param newRatio The updated amount of AMF tokens corresponding to 1 BTC (~10^5)\n     */\n    function setSwapRatio(uint256 newRatio) external virtual onlyOwner returns (bool) {\n        _swapRatio = newRatio;\n        emit RatioChanged(newRatio);\n        return true;\n    }\n    // Emitted when AMFEIX changes the current swap ratio\n    event RatioChanged (\n        uint256 indexed newRatio\n    );\n\n    /**\n     * @dev Returns the current AMF token pool address held by AMFEIX.\n     */\n    function getTokenPoolAddress() public view virtual returns (address) {\n        return _tokenPool;\n    }\n\n    /**\n     * @dev Allows contract owner to update its current AMF token pool address.\n     * \n     * @param newAddress The updated address of the token pool\n     */\n    function setTokenPoolAddress(address newAddress) external virtual onlyOwner returns (bool) {\n        _tokenPool = newAddress;\n        emit TokenPoolAddressChanged(newAddress);\n        return true;\n    }\n    // Emitted when AMFEIX changes the current token pool address\n    event TokenPoolAddressChanged (\n        address indexed newAddress\n    );\n\n    /**\n     * @dev Returns the current BTC pool address held by AMFEIX.\n     */\n    function getBtcPoolAddress() public view virtual returns (string memory) {\n        return _btcPool;\n    }\n\n    /**\n     * @dev Allows contract owner to update its current BTC pool address.\n     * \n     * @param newAddress The updated address of the BTC pool\n     */\n    function setBtcPoolAddress(string memory newAddress) external virtual onlyOwner returns (bool) {\n        _btcPool = newAddress;\n        emit BtcPoolAddressChanged(newAddress);\n        return true;\n    }\n    // Emitted when AMFEIX changes the current BTC pool address\n    event BtcPoolAddressChanged (\n        string indexed newAddress\n    );\n\n    /**\n     * @dev Allow any customer who hold tokens to claim BTC\n     * \n     * @param tokenAmount Amount of tokens to be exchanged (needs to be multiplied by 10^18)\n     * @param userBtcAddress BTC address on which users willing to receive payment\n     * /!\\ gas cost for calling this method : 37kgas /!\\\n     */\n    function claimBTC(uint256 tokenAmount, string memory userBtcAddress) public virtual returns (bool) {\n        require (tokenAmount >= _minimumWithdrawal, \"current minimum withrawal is ${_minimumWithdrawal}\");\n        _transfer(_msgSender(), _tokenPool, tokenAmount);\n        emit BtcToBePaid(_msgSender(), userBtcAddress, tokenAmount);\n        return true;\n    }\n    // Emitted when an user claim BTC against its tokens\n    event BtcToBePaid (\n        address indexed customer,\n        string userBtcAddress,\n        uint256 sentToken\n    );\n\n    /**\n     * @dev Allow AMFEIX to transfer AMF to claiming users\n     * \n     * @param tokenAmount Amount of tokens to be sent\n     * @param userAddress BTC address on which users willing to receive payment\n     * @param btcTxId ID of the AMF buying transaction on Bitcoin network\n     */\n    function payAMF(uint256 tokenAmount, address userAddress, string memory btcTxId) public virtual returns (bool) {\n        require(_msgSender() == _tokenPool, \"Only AMFEIX can use this method\");\n        _transfer(_msgSender(), userAddress, tokenAmount);\n        emit AmfPaid(userAddress, btcTxId, tokenAmount);\n        return true;\n    }\n    // Emitted when AMFEIX send AMF to users.\n    event AmfPaid (\n        address indexed customer,\n        string btcTxId,\n        uint256 sentToken\n    );\n\n    // GSN compatibility\n    function _msgSender() internal override(Context, BaseRelayRecipient) view returns (address payable) {\n        return payable(BaseRelayRecipient._msgSender());\n    }\n    function _msgData() internal override(Context,BaseRelayRecipient) view returns (bytes memory ret) {\n        return BaseRelayRecipient._msgData();\n    }\n    function setForwarder(address forwarder) public onlyOwner {\n        trustedForwarder = forwarder;\n    }\n}",
  "sourcePath": "/home/kaio/AMFEIX-Token/contracts/AMF.sol",
  "ast": {
    "absolutePath": "/home/kaio/AMFEIX-Token/contracts/AMF.sol",
    "exportedSymbols": {
      "AMF": [
        363
      ],
      "BaseRelayRecipient": [
        484
      ],
      "Context": [
        1259
      ],
      "ERC20": [
        1130
      ],
      "IERC20": [
        1208
      ],
      "IERC20Metadata": [
        1233
      ],
      "IRelayRecipient": [
        513
      ],
      "Ownable": [
        623
      ]
    },
    "id": 364,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 1131,
        "src": "25:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 624,
        "src": "97:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol",
        "file": "../node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 485,
        "src": "166:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1130,
              "src": "388:5:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "388:5:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 623,
              "src": "395:7:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "395:7:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "BaseRelayRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 484,
              "src": "404:18:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "404:18:0"
          }
        ],
        "contractDependencies": [
          484,
          513,
          623,
          1130,
          1208,
          1233,
          1259
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "239:132:0",
          "text": " @title AMFEIX ERC20 swap smart contract\n @dev Contract based on ERC20 standard with \"swap\" features between BTC and AMF"
        },
        "fullyImplemented": true,
        "id": 363,
        "linearizedBaseContracts": [
          363,
          484,
          513,
          623,
          1130,
          1233,
          1208,
          1259
        ],
        "name": "AMF",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "430:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "439:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "430:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "_swapRatio",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "483:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "_tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "515:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "515:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_btcPool",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "547:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 20,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "_minimumWithdrawal",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "576:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              512
            ],
            "constant": false,
            "functionSelector": "486ff0cd",
            "id": 27,
            "mutability": "mutable",
            "name": "versionRecipient",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "631:8:0"
            },
            "scope": 363,
            "src": "617:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "617:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "322e322e30",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "659:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c3370ec04d3fde248d4ca6dba2b404616edc2a8aabef2176407cb0399c4bec87",
                "typeString": "literal_string \"2.2.0\""
              },
              "value": "2.2.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1086:283:0",
              "statements": [
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "_swapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1100:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1113:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "1100:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:19:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "_tokenPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1157:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50,
                      "name": "tokenPool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1170:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1157:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:23:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "_btcPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1230:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "btcPool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1241:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1230:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:19:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "_minimumWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1299:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1320:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1299:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:25:0"
                }
              ]
            },
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "673:231:0",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 39,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1061:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 40,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "1067:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 41,
                "modifierName": {
                  "id": 38,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1130,
                  "src": "1055:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:20:0"
              },
              {
                "arguments": [],
                "id": 43,
                "modifierName": {
                  "id": 42,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "1076:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1076:9:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "931:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "961:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "tokenPool_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "993:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "btcPool_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1022:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:133:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:0:0"
            },
            "scope": 363,
            "src": "909:460:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1675:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "newHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1691:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1702:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "1685:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:24:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1726:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "1719:13:0"
                }
              ]
            },
            "documentation": {
              "id": 63,
              "nodeType": "StructuredDocumentation",
              "src": "1375:203:0",
              "text": " @dev Allows contract owner to create new tokens.\n \n @param newHolder Ethereum address of the recipient \n @param amount The number of tokens the recipient will receive"
            },
            "functionSelector": "40c10f19",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70,
                "modifierName": {
                  "id": 69,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "1647:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "newHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1597:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1616:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:35:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1666:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:9:0"
            },
            "scope": 363,
            "src": "1583:156:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1967:65:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "1983:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1983:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 93,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1997:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "1977:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2021:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 89,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "2014:11:0"
                }
              ]
            },
            "documentation": {
              "id": 83,
              "nodeType": "StructuredDocumentation",
              "src": "1745:157:0",
              "text": " @dev Allows anyone to destroy its tokens.\n @param amount The number of tokens that sender is willing to burn from its account"
            },
            "functionSelector": "42966c68",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1921:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:16:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1961:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:6:0"
            },
            "scope": 363,
            "src": "1907:125:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "2379:42:0",
              "statements": [
                {
                  "expression": {
                    "id": 105,
                    "name": "_minimumWithdrawal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "2396:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 104,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "2389:25:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "2037:261:0",
              "text": " @dev Returns the current AMF minimum withdrawal amount.\n \n We need this value to prevent users from claiming BTC if the AMF amount is too small.\n Main reason is the BTC mining fees AMFEIX is going to pay for this transaction"
            },
            "functionSelector": "f529e5ca",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumWithdrawalAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:2:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2370:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:9:0"
            },
            "scope": 363,
            "src": "2303:118:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "2722:120:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "_minimumWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2732:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "newMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2753:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2732:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2732:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "newMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2803:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "name": "MinimumWithdrawalChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "2778:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "EmitStatement",
                  "src": "2773:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2831:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 117,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "2824:11:0"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "2427:192:0",
              "text": " @dev Allows contract owner to update the current AMF minimum withdrawal amount.\n \n @param newMinimum The updated minimum amount of AMF allowed for BTC withdrawal"
            },
            "functionSelector": "3620d373",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 114,
                "modifierName": {
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2697:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2697:9:0"
              }
            ],
            "name": "setMinimumWithdrawalAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "newMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2660:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2659:20:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2716:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2715:6:0"
            },
            "scope": 363,
            "src": "2624:218:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 133,
            "name": "MinimumWithdrawalChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2965:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2955:42:0"
            },
            "src": "2924:74:0"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "3437:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "_swapRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "3454:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "3447:17:0"
                }
              ]
            },
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "3004:366:0",
              "text": " @dev Returns the current swap ratio (how much AMF tokens corresponds to 1 BTC)\n      \n Initial ratio  100000 AMF : 1 BTC  (1 AMF : 1000 sat)\n We need this value to compute the amount of AMF to send to users when they deposited BTC at AMFEIX\n and to compute the amount of BTC to send to users when they claim back their BTC."
            },
            "functionSelector": "becb3451",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3428:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3427:9:0"
            },
            "scope": 363,
            "src": "3375:96:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3748:96:0",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "_swapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3758:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3771:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 157,
                        "name": "newRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "3807:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 156,
                      "name": "RatioChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3794:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "EmitStatement",
                  "src": "3789:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3833:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3826:11:0"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "3477:184:0",
              "text": " @dev Allows contract owner to update the current swap ratio (AMF/BTC).\n \n @param newRatio The updated amount of AMF tokens corresponding to 1 BTC (~10^5)"
            },
            "functionSelector": "ba2129b1",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3723:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3723:9:0"
              }
            ],
            "name": "setSwapRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3688:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3687:18:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3742:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3741:6:0"
            },
            "scope": 363,
            "src": "3666:178:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 167,
            "name": "RatioChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "3936:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3926:40:0"
            },
            "src": "3907:60:0"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "4129:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "name": "_tokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "4146:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "4139:17:0"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "3973:82:0",
              "text": " @dev Returns the current AMF token pool address held by AMFEIX."
            },
            "functionSelector": "88b6c5c2",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4088:2:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "4120:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4119:9:0"
            },
            "scope": 363,
            "src": "4060:103:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "4427:111:0",
              "statements": [
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 186,
                      "name": "_tokenPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4437:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 187,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "4450:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4437:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4437:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 191,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "4499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 190,
                      "name": "TokenPoolAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "4475:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4475:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "4470:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4527:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 185,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "4520:11:0"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "4169:162:0",
              "text": " @dev Allows contract owner to update its current AMF token pool address.\n \n @param newAddress The updated address of the token pool"
            },
            "functionSelector": "f03cb74b",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "4402:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4402:9:0"
              }
            ],
            "name": "setTokenPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "4365:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4364:20:0"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "4421:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:6:0"
            },
            "scope": 363,
            "src": "4336:202:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 201,
            "name": "TokenPoolAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "4649:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4639:42:0"
            },
            "src": "4609:73:0"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "4842:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 207,
                    "name": "_btcPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "4859:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 208,
                  "nodeType": "Return",
                  "src": "4852:15:0"
                }
              ]
            },
            "documentation": {
              "id": 202,
              "nodeType": "StructuredDocumentation",
              "src": "4688:76:0",
              "text": " @dev Returns the current BTC pool address held by AMFEIX."
            },
            "functionSelector": "3ad62bd7",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:2:0"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "4827:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4827:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4826:15:0"
            },
            "scope": 363,
            "src": "4769:105:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "5134:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 220,
                      "name": "_btcPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5144:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "5155:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5144:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "5144:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "5202:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 224,
                      "name": "BtcPoolAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "5180:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "5175:38:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 219,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "5223:11:0"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "4880:154:0",
              "text": " @dev Allows contract owner to update its current BTC pool address.\n \n @param newAddress The updated address of the BTC pool"
            },
            "functionSelector": "801166a1",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "modifierName": {
                  "id": 215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "5109:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5109:9:0"
              }
            ],
            "name": "setBtcPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "5066:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5065:26:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "5128:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5127:6:0"
            },
            "scope": 363,
            "src": "5039:202:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 235,
            "name": "BtcPoolAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "5348:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5348:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5338:41:0"
            },
            "src": "5310:70:0"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "5802:262:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 246,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "5821:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 247,
                          "name": "_minimumWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "5836:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5821:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e74206d696e696d756d2077697468726177616c20697320247b5f6d696e696d756d5769746864726177616c7d",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5856:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7",
                          "typeString": "literal_string \"current minimum withrawal is ${_minimumWithdrawal}\""
                        },
                        "value": "current minimum withrawal is ${_minimumWithdrawal}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7",
                          "typeString": "literal_string \"current minimum withrawal is ${_minimumWithdrawal}\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5812:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5812:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 253,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "5929:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5929:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "5943:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 256,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "5955:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 252,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "5919:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "5919:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 260,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "5994:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5994:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 262,
                        "name": "userBtcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "6008:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 263,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "6024:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 259,
                      "name": "BtcToBePaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "5982:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5982:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "5977:59:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6053:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 244,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "6046:11:0"
                }
              ]
            },
            "documentation": {
              "id": 236,
              "nodeType": "StructuredDocumentation",
              "src": "5386:312:0",
              "text": " @dev Allow any customer who hold tokens to claim BTC\n \n @param tokenAmount Amount of tokens to be exchanged (needs to be multiplied by 10^18)\n @param userBtcAddress BTC address on which users willing to receive payment\n /!\\ gas cost for calling this method : 37kgas /!\\"
            },
            "functionSelector": "aa784366",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimBTC",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5721:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "userBtcAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5742:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5720:51:0"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5796:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5795:6:0"
            },
            "scope": 363,
            "src": "5703:361:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 277,
            "name": "BtcToBePaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6154:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userBtcAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6188:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6219:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6144:98:0"
            },
            "src": "6126:117:0"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "6651:224:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              337
                            ],
                            "referencedDeclaration": 337,
                            "src": "6669:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6669:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 292,
                          "name": "_tokenPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "6685:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6669:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920414d464549582063616e207573652074686973206d6574686f64",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6697:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53",
                          "typeString": "literal_string \"Only AMFEIX can use this method\""
                        },
                        "value": "Only AMFEIX can use this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53",
                          "typeString": "literal_string \"Only AMFEIX can use this method\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6661:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "6661:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 298,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "6751:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6751:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 300,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "6765:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 301,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "6778:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 297,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "6741:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6741:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "6741:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "6813:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 306,
                        "name": "btcTxId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6826:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 307,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "6835:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 304,
                      "name": "AmfPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "6805:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6805:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "EmitStatement",
                  "src": "6800:47:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6864:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 288,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "6857:11:0"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "6249:286:0",
              "text": " @dev Allow AMFEIX to transfer AMF to claiming users\n \n @param tokenAmount Amount of tokens to be sent\n @param userAddress BTC address on which users willing to receive payment\n @param btcTxId ID of the AMF buying transaction on Bitcoin network"
            },
            "functionSelector": "6e2662b8",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payAMF",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6556:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6556:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6577:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "btcTxId",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6598:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6555:65:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6645:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6644:6:0"
            },
            "scope": 363,
            "src": "6540:335:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 321,
            "name": "AmfPaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "6950:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "btcTxId",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "6984:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6984:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "7008:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7008:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6940:91:0"
            },
            "src": "6926:106:0"
          },
          {
            "baseFunctions": [
              449,
              1247
            ],
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "7163:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 331,
                            "name": "BaseRelayRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "7188:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$484_$",
                              "typeString": "type(contract BaseRelayRecipient)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 449,
                          "src": "7188:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7180:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7180:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7180:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 328,
                  "id": 335,
                  "nodeType": "Return",
                  "src": "7173:47:0"
                }
              ]
            },
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 325,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 323,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1259,
                  "src": "7103:7:0"
                },
                {
                  "id": 324,
                  "name": "BaseRelayRecipient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 484,
                  "src": "7112:18:0"
                }
              ],
              "src": "7094:37:0"
            },
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7082:2:0"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "7146:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7146:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7145:17:0"
            },
            "scope": 363,
            "src": "7063:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              483,
              1258
            ],
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "7330:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 345,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "7347:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$484_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "7347:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 344,
                  "id": 348,
                  "nodeType": "Return",
                  "src": "7340:36:0"
                }
              ]
            },
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 341,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 339,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1259,
                  "src": "7270:7:0"
                },
                {
                  "id": 340,
                  "name": "BaseRelayRecipient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 484,
                  "src": "7278:18:0"
                }
              ],
              "src": "7261:36:0"
            },
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7249:2:0"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "ret",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "7312:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7312:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7311:18:0"
            },
            "scope": 363,
            "src": "7232:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "7446:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "7456:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 358,
                      "name": "forwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "7475:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7456:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:28:0"
                }
              ]
            },
            "functionSelector": "b9998a24",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 355,
                "modifierName": {
                  "id": 354,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "7436:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7436:9:0"
              }
            ],
            "name": "setForwarder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "7410:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7410:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:19:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7446:0:0"
            },
            "scope": 363,
            "src": "7388:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 364,
        "src": "372:7121:0"
      }
    ],
    "src": "0:7493:0"
  },
  "legacyAST": {
    "absolutePath": "/home/kaio/AMFEIX-Token/contracts/AMF.sol",
    "exportedSymbols": {
      "AMF": [
        363
      ],
      "BaseRelayRecipient": [
        484
      ],
      "Context": [
        1259
      ],
      "ERC20": [
        1130
      ],
      "IERC20": [
        1208
      ],
      "IERC20Metadata": [
        1233
      ],
      "IRelayRecipient": [
        513
      ],
      "Ownable": [
        623
      ]
    },
    "id": 364,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 1131,
        "src": "25:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 624,
        "src": "97:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kaio/AMFEIX-Token/node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol",
        "file": "../node_modules/@opengsn/contracts/src/BaseRelayRecipient.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 485,
        "src": "166:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1130,
              "src": "388:5:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "388:5:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 623,
              "src": "395:7:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "395:7:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "BaseRelayRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 484,
              "src": "404:18:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "404:18:0"
          }
        ],
        "contractDependencies": [
          484,
          513,
          623,
          1130,
          1208,
          1233,
          1259
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "239:132:0",
          "text": " @title AMFEIX ERC20 swap smart contract\n @dev Contract based on ERC20 standard with \"swap\" features between BTC and AMF"
        },
        "fullyImplemented": true,
        "id": 363,
        "linearizedBaseContracts": [
          363,
          484,
          513,
          623,
          1130,
          1233,
          1208,
          1259
        ],
        "name": "AMF",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "430:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "439:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "430:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "_swapRatio",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "483:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "_tokenPool",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "515:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "515:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_btcPool",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "547:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 20,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "_minimumWithdrawal",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "576:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              512
            ],
            "constant": false,
            "functionSelector": "486ff0cd",
            "id": 27,
            "mutability": "mutable",
            "name": "versionRecipient",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "631:8:0"
            },
            "scope": 363,
            "src": "617:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "617:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "322e322e30",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "659:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c3370ec04d3fde248d4ca6dba2b404616edc2a8aabef2176407cb0399c4bec87",
                "typeString": "literal_string \"2.2.0\""
              },
              "value": "2.2.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1086:283:0",
              "statements": [
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "_swapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1100:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1113:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "1100:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:19:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "_tokenPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1157:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50,
                      "name": "tokenPool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1170:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1157:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:23:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "_btcPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1230:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "btcPool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1241:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1230:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:19:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "_minimumWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1299:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1320:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1299:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:25:0"
                }
              ]
            },
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "673:231:0",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 39,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1061:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 40,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "1067:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 41,
                "modifierName": {
                  "id": 38,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1130,
                  "src": "1055:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:20:0"
              },
              {
                "arguments": [],
                "id": 43,
                "modifierName": {
                  "id": 42,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "1076:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1076:9:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "931:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "961:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "tokenPool_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "993:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "btcPool_",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1022:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:133:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:0:0"
            },
            "scope": 363,
            "src": "909:460:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1675:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "newHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1691:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1702:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "1685:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:24:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1726:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "1719:13:0"
                }
              ]
            },
            "documentation": {
              "id": 63,
              "nodeType": "StructuredDocumentation",
              "src": "1375:203:0",
              "text": " @dev Allows contract owner to create new tokens.\n \n @param newHolder Ethereum address of the recipient \n @param amount The number of tokens the recipient will receive"
            },
            "functionSelector": "40c10f19",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70,
                "modifierName": {
                  "id": 69,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "1647:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "newHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1597:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1616:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:35:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1666:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:9:0"
            },
            "scope": 363,
            "src": "1583:156:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1967:65:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "1983:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1983:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 93,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1997:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "1977:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2021:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 89,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "2014:11:0"
                }
              ]
            },
            "documentation": {
              "id": 83,
              "nodeType": "StructuredDocumentation",
              "src": "1745:157:0",
              "text": " @dev Allows anyone to destroy its tokens.\n @param amount The number of tokens that sender is willing to burn from its account"
            },
            "functionSelector": "42966c68",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1921:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:16:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1961:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:6:0"
            },
            "scope": 363,
            "src": "1907:125:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "2379:42:0",
              "statements": [
                {
                  "expression": {
                    "id": 105,
                    "name": "_minimumWithdrawal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "2396:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 104,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "2389:25:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "2037:261:0",
              "text": " @dev Returns the current AMF minimum withdrawal amount.\n \n We need this value to prevent users from claiming BTC if the AMF amount is too small.\n Main reason is the BTC mining fees AMFEIX is going to pay for this transaction"
            },
            "functionSelector": "f529e5ca",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumWithdrawalAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:2:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2370:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:9:0"
            },
            "scope": 363,
            "src": "2303:118:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "2722:120:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "_minimumWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2732:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "newMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2753:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2732:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2732:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "newMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2803:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "name": "MinimumWithdrawalChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "2778:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "EmitStatement",
                  "src": "2773:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2831:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 117,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "2824:11:0"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "2427:192:0",
              "text": " @dev Allows contract owner to update the current AMF minimum withdrawal amount.\n \n @param newMinimum The updated minimum amount of AMF allowed for BTC withdrawal"
            },
            "functionSelector": "3620d373",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 114,
                "modifierName": {
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2697:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2697:9:0"
              }
            ],
            "name": "setMinimumWithdrawalAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "newMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2660:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2659:20:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2716:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2715:6:0"
            },
            "scope": 363,
            "src": "2624:218:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 133,
            "name": "MinimumWithdrawalChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2965:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2955:42:0"
            },
            "src": "2924:74:0"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "3437:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "_swapRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "3454:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "3447:17:0"
                }
              ]
            },
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "3004:366:0",
              "text": " @dev Returns the current swap ratio (how much AMF tokens corresponds to 1 BTC)\n      \n Initial ratio  100000 AMF : 1 BTC  (1 AMF : 1000 sat)\n We need this value to compute the amount of AMF to send to users when they deposited BTC at AMFEIX\n and to compute the amount of BTC to send to users when they claim back their BTC."
            },
            "functionSelector": "becb3451",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3428:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3427:9:0"
            },
            "scope": 363,
            "src": "3375:96:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3748:96:0",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "_swapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3758:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3771:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 157,
                        "name": "newRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "3807:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 156,
                      "name": "RatioChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3794:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "EmitStatement",
                  "src": "3789:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3833:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3826:11:0"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "3477:184:0",
              "text": " @dev Allows contract owner to update the current swap ratio (AMF/BTC).\n \n @param newRatio The updated amount of AMF tokens corresponding to 1 BTC (~10^5)"
            },
            "functionSelector": "ba2129b1",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3723:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3723:9:0"
              }
            ],
            "name": "setSwapRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3688:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3687:18:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3742:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3741:6:0"
            },
            "scope": 363,
            "src": "3666:178:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 167,
            "name": "RatioChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "3936:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3926:40:0"
            },
            "src": "3907:60:0"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "4129:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "name": "_tokenPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "4146:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "4139:17:0"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "3973:82:0",
              "text": " @dev Returns the current AMF token pool address held by AMFEIX."
            },
            "functionSelector": "88b6c5c2",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4088:2:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "4120:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4119:9:0"
            },
            "scope": 363,
            "src": "4060:103:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "4427:111:0",
              "statements": [
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 186,
                      "name": "_tokenPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4437:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 187,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "4450:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4437:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4437:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 191,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "4499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 190,
                      "name": "TokenPoolAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "4475:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4475:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "4470:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4527:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 185,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "4520:11:0"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "4169:162:0",
              "text": " @dev Allows contract owner to update its current AMF token pool address.\n \n @param newAddress The updated address of the token pool"
            },
            "functionSelector": "f03cb74b",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "4402:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4402:9:0"
              }
            ],
            "name": "setTokenPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "4365:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4364:20:0"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "4421:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:6:0"
            },
            "scope": 363,
            "src": "4336:202:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 201,
            "name": "TokenPoolAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "4649:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4639:42:0"
            },
            "src": "4609:73:0"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "4842:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 207,
                    "name": "_btcPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "4859:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 208,
                  "nodeType": "Return",
                  "src": "4852:15:0"
                }
              ]
            },
            "documentation": {
              "id": 202,
              "nodeType": "StructuredDocumentation",
              "src": "4688:76:0",
              "text": " @dev Returns the current BTC pool address held by AMFEIX."
            },
            "functionSelector": "3ad62bd7",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBtcPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:2:0"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "4827:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4827:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4826:15:0"
            },
            "scope": 363,
            "src": "4769:105:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "5134:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 220,
                      "name": "_btcPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5144:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "5155:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5144:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "5144:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "5202:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 224,
                      "name": "BtcPoolAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "5180:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "5175:38:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 219,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "5223:11:0"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "4880:154:0",
              "text": " @dev Allows contract owner to update its current BTC pool address.\n \n @param newAddress The updated address of the BTC pool"
            },
            "functionSelector": "801166a1",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "modifierName": {
                  "id": 215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "5109:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5109:9:0"
              }
            ],
            "name": "setBtcPoolAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "5066:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5065:26:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "5128:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5127:6:0"
            },
            "scope": 363,
            "src": "5039:202:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 235,
            "name": "BtcPoolAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "5348:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5348:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5338:41:0"
            },
            "src": "5310:70:0"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "5802:262:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 246,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "5821:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 247,
                          "name": "_minimumWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "5836:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5821:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e74206d696e696d756d2077697468726177616c20697320247b5f6d696e696d756d5769746864726177616c7d",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5856:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7",
                          "typeString": "literal_string \"current minimum withrawal is ${_minimumWithdrawal}\""
                        },
                        "value": "current minimum withrawal is ${_minimumWithdrawal}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_539c5c5cfd07a428a0f0b44c3c7d8673a873c39c53166bfcb1b908a4f7461ab7",
                          "typeString": "literal_string \"current minimum withrawal is ${_minimumWithdrawal}\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5812:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5812:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 253,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "5929:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5929:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "5943:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 256,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "5955:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 252,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "5919:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "5919:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 260,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "5994:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5994:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 262,
                        "name": "userBtcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "6008:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 263,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "6024:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 259,
                      "name": "BtcToBePaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "5982:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5982:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "5977:59:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6053:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 244,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "6046:11:0"
                }
              ]
            },
            "documentation": {
              "id": 236,
              "nodeType": "StructuredDocumentation",
              "src": "5386:312:0",
              "text": " @dev Allow any customer who hold tokens to claim BTC\n \n @param tokenAmount Amount of tokens to be exchanged (needs to be multiplied by 10^18)\n @param userBtcAddress BTC address on which users willing to receive payment\n /!\\ gas cost for calling this method : 37kgas /!\\"
            },
            "functionSelector": "aa784366",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimBTC",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5721:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "userBtcAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5742:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5720:51:0"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5796:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5795:6:0"
            },
            "scope": 363,
            "src": "5703:361:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 277,
            "name": "BtcToBePaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6154:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userBtcAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6188:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "6219:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6144:98:0"
            },
            "src": "6126:117:0"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "6651:224:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              337
                            ],
                            "referencedDeclaration": 337,
                            "src": "6669:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6669:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 292,
                          "name": "_tokenPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "6685:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6669:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920414d464549582063616e207573652074686973206d6574686f64",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6697:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53",
                          "typeString": "literal_string \"Only AMFEIX can use this method\""
                        },
                        "value": "Only AMFEIX can use this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04949026dc73611165213b8fee5e47f10fa1f28332a06aa478ae07dfba582b53",
                          "typeString": "literal_string \"Only AMFEIX can use this method\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6661:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "6661:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 298,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            337
                          ],
                          "referencedDeclaration": 337,
                          "src": "6751:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6751:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 300,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "6765:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 301,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "6778:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 297,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "6741:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6741:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "6741:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "6813:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 306,
                        "name": "btcTxId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6826:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 307,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "6835:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 304,
                      "name": "AmfPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "6805:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6805:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "EmitStatement",
                  "src": "6800:47:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6864:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 288,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "6857:11:0"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "6249:286:0",
              "text": " @dev Allow AMFEIX to transfer AMF to claiming users\n \n @param tokenAmount Amount of tokens to be sent\n @param userAddress BTC address on which users willing to receive payment\n @param btcTxId ID of the AMF buying transaction on Bitcoin network"
            },
            "functionSelector": "6e2662b8",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payAMF",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6556:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6556:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6577:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "btcTxId",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6598:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6555:65:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "6645:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6644:6:0"
            },
            "scope": 363,
            "src": "6540:335:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 321,
            "name": "AmfPaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "6950:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "btcTxId",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "6984:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6984:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "7008:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7008:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6940:91:0"
            },
            "src": "6926:106:0"
          },
          {
            "baseFunctions": [
              449,
              1247
            ],
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "7163:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 331,
                            "name": "BaseRelayRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "7188:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$484_$",
                              "typeString": "type(contract BaseRelayRecipient)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 449,
                          "src": "7188:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7180:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7180:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7180:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 328,
                  "id": 335,
                  "nodeType": "Return",
                  "src": "7173:47:0"
                }
              ]
            },
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 325,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 323,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1259,
                  "src": "7103:7:0"
                },
                {
                  "id": 324,
                  "name": "BaseRelayRecipient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 484,
                  "src": "7112:18:0"
                }
              ],
              "src": "7094:37:0"
            },
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7082:2:0"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "7146:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7146:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7145:17:0"
            },
            "scope": 363,
            "src": "7063:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              483,
              1258
            ],
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "7330:53:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 345,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "7347:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$484_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "7347:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 344,
                  "id": 348,
                  "nodeType": "Return",
                  "src": "7340:36:0"
                }
              ]
            },
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 341,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 339,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1259,
                  "src": "7270:7:0"
                },
                {
                  "id": 340,
                  "name": "BaseRelayRecipient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 484,
                  "src": "7278:18:0"
                }
              ],
              "src": "7261:36:0"
            },
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7249:2:0"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "ret",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "7312:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7312:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7311:18:0"
            },
            "scope": 363,
            "src": "7232:151:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "7446:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "7456:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 358,
                      "name": "forwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "7475:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7456:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:28:0"
                }
              ]
            },
            "functionSelector": "b9998a24",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 355,
                "modifierName": {
                  "id": 354,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "7436:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7436:9:0"
              }
            ],
            "name": "setForwarder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "7410:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7410:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:19:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7446:0:0"
            },
            "scope": 363,
            "src": "7388:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 364,
        "src": "372:7121:0"
      }
    ],
    "src": "0:7493:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Linux.g++"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x57a2da10e578fdce2482690a77eb65471abdc36ee3abdea43b2cb43b0d7486bd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "customer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "userBtcAddress",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sentToken",
              "type": "uint256"
            }
          ],
          "name": "BtcToBePaid",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x6a3299a544c3d481c2cce4d35d1d64d608518f67ee809c85679ee2a8d0e2b6b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "ethTxId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "customer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "btcAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "btcToAmfRatio",
              "type": "uint256"
            }
          ],
          "name": "PaidBTC",
          "type": "event"
        },
        "0xb4d3d3ab5256bd320e9b608e7d72573849b006e85edb07e0380129159df366f0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "btcTxId",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "userEthAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "btcToAmfRatio",
              "type": "uint256"
            }
          ],
          "name": "PaidToken",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xdbaa75eb327a06f927a3a51694b0af062122012490b7fec799e3d8ba8e2f5611": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "newAddress",
              "type": "string"
            }
          ],
          "name": "BtcPoolAddressChanged",
          "type": "event"
        },
        "0xe200219383a2dbe79fad4e1549a81b6057429299f33583641c5fdddcdc0b3797": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            }
          ],
          "name": "RatioChanged",
          "type": "event"
        },
        "0x621a90dc5a329844ef964be25bebe48e4c53aeccd5103828f62d85513330b2f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "TokenPoolAddressChanged",
          "type": "event"
        },
        "0x95763f56e04b8aa137bfb71e206bfba87dafe92d7eb96bbd3909c1fc21c41e08": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "customer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "btcTxId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sentToken",
              "type": "uint256"
            }
          ],
          "name": "AmfPaid",
          "type": "event"
        },
        "0x1c0b5d59cecc9b0f3621bb9becf0bc789b39a30cba53596aba207720f92a1caa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "newMinimum",
              "type": "uint256"
            }
          ],
          "name": "MinimumWithdrawalChanged",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x131534E791215dcDc9dBF1c2a6914a68a7bA642E",
      "transactionHash": "0xecb68b9082cce49e086540d5024be0e9a43a613998eb1e94686c3d04b47b6111"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-05-26T11:58:49.520Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Contract based on ERC20 standard with \"swap\" features between BTC and AMF",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Allows anyone to destroy its tokens.",
        "params": {
          "amount": "The number of tokens that sender is willing to burn from its account"
        }
      },
      "claimBTC(uint256,string)": {
        "details": "Allow any customer who hold tokens to claim BTC ",
        "params": {
          "tokenAmount": "Amount of tokens to be exchanged (needs to be multiplied by 10^18)",
          "userBtcAddress": "BTC address on which users willing to receive payment /!\\ gas cost for calling this method : 37kgas /!\\"
        }
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getBtcPoolAddress()": {
        "details": "Returns the current BTC pool address held by AMFEIX."
      },
      "getMinimumWithdrawalAmount()": {
        "details": "Returns the current AMF minimum withdrawal amount.  We need this value to prevent users from claiming BTC if the AMF amount is too small. Main reason is the BTC mining fees AMFEIX is going to pay for this transaction"
      },
      "getSwapRatio()": {
        "details": "Returns the current swap ratio (how much AMF tokens corresponds to 1 BTC)       Initial ratio  100000 AMF : 1 BTC  (1 AMF : 1000 sat) We need this value to compute the amount of AMF to send to users when they deposited BTC at AMFEIX and to compute the amount of BTC to send to users when they claim back their BTC."
      },
      "getTokenPoolAddress()": {
        "details": "Returns the current AMF token pool address held by AMFEIX."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Allows contract owner to create new tokens. ",
        "params": {
          "amount": "The number of tokens the recipient will receive",
          "newHolder": "Ethereum address of the recipient "
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "payAMF(uint256,address,string)": {
        "details": "Allow AMFEIX to transfer AMF to claiming users ",
        "params": {
          "btcTxId": "ID of the AMF buying transaction on Bitcoin network",
          "tokenAmount": "Amount of tokens to be sent",
          "userAddress": "BTC address on which users willing to receive payment"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBtcPoolAddress(string)": {
        "details": "Allows contract owner to update its current BTC pool address. ",
        "params": {
          "newAddress": "The updated address of the BTC pool"
        }
      },
      "setMinimumWithdrawalAmount(uint256)": {
        "details": "Allows contract owner to update the current AMF minimum withdrawal amount. ",
        "params": {
          "newMinimum": "The updated minimum amount of AMF allowed for BTC withdrawal"
        }
      },
      "setSwapRatio(uint256)": {
        "details": "Allows contract owner to update the current swap ratio (AMF/BTC). ",
        "params": {
          "newRatio": "The updated amount of AMF tokens corresponding to 1 BTC (~10^5)"
        }
      },
      "setTokenPoolAddress(address)": {
        "details": "Allows contract owner to update its current AMF token pool address. ",
        "params": {
          "newAddress": "The updated address of the token pool"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "AMFEIX ERC20 swap smart contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      }
    },
    "version": 1
  }
}